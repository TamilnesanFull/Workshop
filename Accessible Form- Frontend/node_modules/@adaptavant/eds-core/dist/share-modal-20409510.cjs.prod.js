'use strict';

var edsCore = require('@adaptavant/eds-core');
var utils = require('@adaptavant/eds-core/utils');
var tw = require('./tw-9929267e.cjs.prod.js');
var jsxRuntime = require('react/jsx-runtime');
var index = require('./index-7955fb8e.cjs.prod.js');

/**
 * URIs for building sharing links
 * */
const WHATSAPP_SHARE_BASE_URI = 'https://web.whatsapp.com/send';
const FACEBOOK_SHARE_BASE_URI = 'https://www.facebook.com/share.php';
const MESSENGER_SHARE_BASE_URI = 'https://www.facebook.com/dialog/send';
const MESSENGER_REDIRECT_URI = 'https://www.messenger.com';

const getShareModalStyles = () => ({
  root: tw.tw``,
  modalWrapper: tw.tw``,
  modalHeaderContent: tw.tw`  
        flex  
        gap-2  
    `,
  title: tw.tw`
		line-clamp-1
    	text-heading-16 
    `,
  modalHeader: tw.tw`
		flex
		gap-2
	`,
  modalContent: tw.tw`
		flex 
		flex-col 
		gap-2
	`,
  content: tw.tw`
		line-clamp-1
		text-body-14
	`,
  optionStack: tw.tw`
		gap-2 
		grid 
		grid-cols-2
		py-2
	`
});

const openInNewWindow = link => {
  if (typeof window !== 'undefined') {
    window.open(link, '_blank');
  }
};

const ShareModal = ({
  className = '',
  classNames = {},
  closeButtonProps,
  headingImageProps,
  link,
  onClose,
  onShareOptionSelect,
  shareOptions,
  style = {},
  styles = {},
  translations,
  ...modalProps
}) => {
  const [copyToClipboard] = utils.useCopyToClipboard();
  const onOptionSelect = async option => {
    onShareOptionSelect === null || onShareOptionSelect === void 0 || onShareOptionSelect(option);
    option.onClick();
    onClose();
  };
  const styleProps = index.getStyleProps({
    className,
    classNames,
    styles,
    style,
    tw: getShareModalStyles()
  });
  const generateDefaultOptions = optionLabels => {
    if (!optionLabels) {
      return [];
    }
    return [...(optionLabels.copyLabel ? [{
      id: 'shared-via-copy-to-clipBoard',
      label: optionLabels.copyLabel || '',
      icon: edsCore.ClipboardCopyIcon,
      onClick: () => {
        copyToClipboard(link);
      }
    }] : []), ...(optionLabels.emailLabel ? [{
      id: 'shared-via-email',
      label: optionLabels.emailLabel,
      icon: edsCore.MailIcon,
      onClick: () => {
        openInNewWindow(`mailto:?&body=${link}`);
      }
    }] : []), ...(optionLabels.facebookLabel ? [{
      id: 'shared-via-facebook',
      label: optionLabels.facebookLabel,
      icon: edsCore.FacebookFilledIcon,
      onClick: () => {
        openInNewWindow(`${FACEBOOK_SHARE_BASE_URI}?u=${encodeURIComponent(link)}`);
      }
    }] : []), ...(optionLabels.messengerLabel ? [{
      id: 'shared-via-messenger',
      label: optionLabels.messengerLabel,
      icon: edsCore.MessengerFilledIcon,
      onClick: () => openInNewWindow(`${MESSENGER_SHARE_BASE_URI}?app_id=1192880291854772&link=${encodeURIComponent(link)}&redirect_uri=${encodeURIComponent(MESSENGER_REDIRECT_URI)}`)
    }] : []), ...(optionLabels.whatsappLabel ? [{
      id: 'shared-via-whatsapp',
      label: optionLabels.whatsappLabel,
      icon: edsCore.WhatsappFilledIcon,
      onClick: () => openInNewWindow(`${WHATSAPP_SHARE_BASE_URI}?text=${link}`)
    }] : [])];
  };
  const options = [...generateDefaultOptions(translations.optionLabels), ...(shareOptions ?? [])];
  return /*#__PURE__*/jsxRuntime.jsxs(edsCore.Modal, {
    classNames: {
      modalWrapper: styleProps('modalWrapper').className
    },
    onClose: onClose,
    size: 480,
    styles: {
      modalWrapper: styleProps('modalWrapper').style
    },
    titleId: "share-modal-title",
    ...modalProps,
    ...styleProps('root'),
    children: [/*#__PURE__*/jsxRuntime.jsx(edsCore.ModalHeader, {
      closeButtonProps: closeButtonProps,
      ...styleProps('modalHeader'),
      children: /*#__PURE__*/jsxRuntime.jsxs(edsCore.Box, {
        ...styleProps('modalHeaderContent'),
        children: [headingImageProps ? /*#__PURE__*/jsxRuntime.jsx(edsCore.Avatar, {
          className: "shrink-0",
          name: headingImageProps.label,
          size: "24",
          children: /*#__PURE__*/jsxRuntime.jsx(edsCore.AvatarImage, {
            src: headingImageProps.src
          })
        }) : /*#__PURE__*/jsxRuntime.jsx(edsCore.CompanyIcon, {
          size: "24"
        }), /*#__PURE__*/jsxRuntime.jsx(edsCore.Heading, {
          as: "h2",
          id: "share-modal-title",
          ...styleProps('title'),
          children: translations.title
        })]
      })
    }), /*#__PURE__*/jsxRuntime.jsxs(edsCore.ModalContent, {
      ...styleProps('modalContent'),
      children: [translations.content ? /*#__PURE__*/jsxRuntime.jsx(edsCore.Text, {
        ...styleProps('content'),
        children: translations.content
      }) : null, Boolean(options.length) && /*#__PURE__*/jsxRuntime.jsx(edsCore.Stack, {
        ...styleProps('optionStack'),
        children: options.map(option => {
          return /*#__PURE__*/jsxRuntime.jsx(edsCore.Button, {
            iconStart: option.icon,
            onClick: () => {
              onOptionSelect(option);
            },
            variant: "neutralSecondary",
            ...styleProps('optionButton'),
            children: option.label
          }, option.id);
        })
      })]
    })]
  });
};

exports.ShareModal = ShareModal;
