'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lodash = require('lodash');
var React = require('react');

const useDeepCompareMemoize = dependencies => {
  const dependenciesRef = React.useRef(dependencies);
  const signalRef = React.useRef(0);
  if (!lodash.isEqual(dependencies, dependenciesRef.current)) {
    dependenciesRef.current = dependencies;
    signalRef.current += 1;
  }

  // eslint-disable-next-line react-hooks/exhaustive-deps
  return React.useMemo(() => dependenciesRef.current, [signalRef.current]);
};
const useDeepCompareEffect = (callback, dependencies) => React.useEffect(callback, useDeepCompareMemoize(dependencies));
const useDeepCompareMemo = (factory, dependencies) => React.useMemo(factory, useDeepCompareMemoize(dependencies));

// we want to let the user put any kind of function
// eslint-disable-next-line @typescript-eslint/ban-types
const useDeepCompareCallback = (callback, dependencies) => React.useCallback(callback, useDeepCompareMemoize(dependencies));

exports.useDeepCompareCallback = useDeepCompareCallback;
exports.useDeepCompareEffect = useDeepCompareEffect;
exports.useDeepCompareMemo = useDeepCompareMemo;
exports.useDeepCompareMemoize = useDeepCompareMemoize;
