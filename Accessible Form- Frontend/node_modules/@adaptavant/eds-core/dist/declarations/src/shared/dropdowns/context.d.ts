import { type usePopover } from "../../experimental/popover/index.js";
import { type DropdownAction, type DropdownState } from "./reducer.js";
export type DropdownContextType = DropdownState & {
    /** ID of the active descendant element, if any. */
    activeDescendantId: string | undefined;
    /** Identifier that is unique between instances. Used to generate IDs. */
    baseId: string;
    /** Clears the selected item. */
    clearSelectedItem: () => void;
    /** Closes the dropdown. */
    closeMenu: () => void;
    /** Identifier for the combobox. */
    comboboxId: string;
    /** Performs the action associated with the selected menu item. */
    clickSelectedItem: () => void;
    /** Dispatch function for updating the state. */
    dispatch: React.Dispatch<DropdownAction>;
    /** Navigates to the first menu item. */
    goToFirstMenuItem: () => void;
    /** Navigates to the last menu item. */
    goToLastMenuItem: () => void;
    /** Navigates to the next menu item. */
    goToNextMenuItem: () => void;
    /** Navigates to the previous menu item. */
    goToPreviousMenuItem: () => void;
    /** Identifier for the listbox or menu. */
    listId: string;
    /** Opens the dropdown. */
    openMenu: () => void;
    /** Popover instance returned from `usePopover`. */
    popover: ReturnType<typeof usePopover<HTMLElement>>;
    /** Identifier for the panel. */
    popoverId: string;
    /** Updates the selected menu item. */
    selectItem: (optionId: string) => void;
    /** Toggles the dropdown's state. */
    toggleMenu: () => void;
    /** Identifier for the trigger element. */
    triggerId: string;
    /** Updates the search term for finding a descendant menu item. */
    updateDescendantSearchTerm: (eventKey: string) => void;
};
export declare const DropdownProvider: import("react").Provider<DropdownContextType | undefined>;
export declare function useDropdownContext(): DropdownContextType;
