import { type ModalHeaderProps } from "../../experimental/modal/index.js";
/**
 * On smaller screen the Dropdowns should be rendered as Modals.
 * MobileDropdownContext provides the context for Modal to be customisable and render correctly.
 */
export type MobileDropdownContextType = {
    /**
     * If `closeButtonProps` is provided then the Modal will have a close button
     */
    closeButtonProps?: Partial<ModalHeaderProps['closeButtonProps']>;
    /** Indicates if the dropdown should be rendered differently in responsive view
     * @default true
     */
    mobileFriendly?: boolean;
    /**
     * If `title` is provided then the Modal will have a Header with title
     */
    title?: string;
    /** The screen width at which the dropdown's popover should switch to a Modal.
     * @default 768
     *
     * @deprecated This prop is deprecated and will be removed in future versions.
     * The togglePoint will be determined by the design system to ensure consistency.
     */
    togglePoint?: number;
};
export declare const MobileDropdownProvider: import("react").Provider<MobileDropdownContextType | undefined>;
export declare function useMobileDropdownContext(): MobileDropdownContextType;
