import { type Config } from 'tailwindcss';
import { type Tokens } from "../tokens/index.js";
type CreatePresetOptions = {
    /** Whether to exclude certain base styles in microfrontends to help prevent duplicate CSS. */
    experimental_shouldExcludeBaseStyles?: boolean;
    /** Whether to exclude custom resets from Earth Design system. */
    shouldExcludeCustomResets?: boolean;
    /** Whether to exclude custom tailwind generated typography classes from EDS to help prevent duplicate CSS. */
    shouldExcludeTypographyStyles?: boolean;
    /** Whether to include Tailwind's default border-radius styles alongside our own. */
    shouldUseTailwindBorderRadius?: boolean;
    /** Whether to include cropper styles to proper render crop-modal component */
    shouldExcludeCropperStyles?: boolean;
    /** Whether to include Tailwind's default box-shadow styles alongside our own. */
    shouldUseTailwindBoxShadows?: boolean;
    /** Whether to include Tailwind's default color palette alongside our own. */
    shouldUseTailwindColors?: boolean;
    /** Whether to include Tailwind's default font-size styles alongside our own. */
    shouldUseTailwindFontSize?: boolean;
    /** Whether to include Tailwind's default font-weight styles alongside our own. */
    shouldUseTailwindFontWeight?: boolean;
    /** Whether to include Tailwind's future features. */
    shouldUseTailwindFuture?: boolean;
};
export declare function createPreset(tokens: Tokens, { experimental_shouldExcludeBaseStyles: shouldExcludeBaseStyles, shouldExcludeCustomResets, shouldExcludeTypographyStyles, shouldExcludeCropperStyles, shouldUseTailwindBorderRadius, shouldUseTailwindBoxShadows, shouldUseTailwindColors, shouldUseTailwindFontSize, shouldUseTailwindFontWeight, shouldUseTailwindFuture, }?: CreatePresetOptions): Config;
export {};
