/**
 * Hook that returns a debounced version of a function.
 * The debounced function delays the execution of the original function until after
 * a specified delay has passed since the last time it was invoked.
 *
 * @param {T} fn - The function to debounce.
 * @param {number} delay - The delay in milliseconds to wait before invoking the function.
 * @returns {T} - A debounced version of the input function.
 */
export declare function useDebounceFunction<T extends (...args: any[]) => void>(fn: T, delay: number): T;
