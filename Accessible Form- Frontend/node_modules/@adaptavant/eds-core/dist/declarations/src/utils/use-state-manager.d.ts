import { type ApiOptions, type CropDimensions, type ErrorTranslations, type ImageMetadata, type ImageProcessingOptions, type ImageUrl, type OnError, type OnSuccessfulUpload } from "../widgets/crop-modal/types.js";
type UseStateManagerParams = {
    apiOptions: Required<ApiOptions>;
    imageProcessingOptions: Required<ImageProcessingOptions>;
    imageUrl: ImageUrl;
    onError?: OnError;
    onSuccessfulUpload: OnSuccessfulUpload;
    translations: Required<ErrorTranslations>;
};
export declare const useStateManager: ({ apiOptions, imageProcessingOptions, imageUrl, onSuccessfulUpload, translations, onError, }: UseStateManagerParams) => {
    isSaving: boolean;
    errorMessage: string | undefined;
    imageMetadata: ImageMetadata;
    isLoadingRemoteImage: boolean;
    isProcessingLocalFile: boolean;
    saveChanges: () => Promise<void>;
    resetOnClose: () => void;
    clearErrorMessage: () => void;
    processLocalImage: (file: File) => Promise<void>;
    updateCropDimensions: (newCropDimensions: CropDimensions) => void;
};
export {};
