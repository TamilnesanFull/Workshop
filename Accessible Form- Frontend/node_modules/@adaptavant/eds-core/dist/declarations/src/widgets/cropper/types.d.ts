export interface CropperOptions extends Cropper.Options<HTMLImageElement> {
    [key: string]: unknown;
}
export type CropperKeys = keyof Cropper.Options;
export type CropperComponentElement = {
    cropper: Cropper;
} & HTMLImageElement;
export type CropperComponentDefaultOptions = {
    enable?: boolean;
    rotateTo?: number;
    scaleX?: number;
    scaleY?: number;
    zoomTo?: number;
};
export type CropperComponentRef = ((instance: HTMLImageElement | CropperComponentElement | null) => void) | React.MutableRefObject<HTMLImageElement | CropperComponentElement | null> | null;
export type CropperComponentProps = {
    crossOrigin?: '' | 'anonymous' | 'use-credentials' | undefined;
    isCircleViewBox?: boolean;
    on?: (eventName: string, callback: () => void | Promise<void>) => void | Promise<void>;
    onInitialized?: (cropperInstance: Cropper) => void | Promise<void>;
} & CropperComponentDefaultOptions & Cropper.Options<HTMLImageElement> & Omit<React.HTMLProps<HTMLImageElement>, 'data' | 'ref' | 'crossOrigin'>;
