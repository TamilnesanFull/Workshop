import { type AvatarIconProps, type AvatarImageProps } from "./types.js";
/**
 * Avatar
 *
 * @description Visual representation of a user.
 */
export declare const Avatar: import("react").ForwardRefExoticComponent<{
    children?: import("react").ReactNode;
    imageSrc?: string | undefined;
    name: string;
    size: "16" | "20" | "24" | "32" | "40" | "48" | "64" | "96";
    status?: "offline" | "available" | "away" | "busy" | "audioCall" | "customer" | "onCall" | undefined;
    isGuest?: boolean | undefined;
} & Partial<import("../../shared/style-utils/index.js").StyleProps<"root" | "initial" | "image" | "statusBadge">> & import("react").RefAttributes<HTMLSpanElement>>;
export declare function AvatarImage({ className, classNames, src, style, styles, ...consumerProps }: AvatarImageProps): import("react/jsx-runtime").JSX.Element;
export declare function AvatarIcon({ className, classNames, icon: Icon, style, styles, ...consumerProps }: AvatarIconProps): import("react/jsx-runtime").JSX.Element;
export declare namespace AvatarIcon {
    var displayName: string;
}
