import { type StyleProps } from "../../shared/style-utils/index.js";
import { type IconProps } from "../icon/types.js";
type AvatarParts = 'root' | 'image' | 'statusBadge' | 'initial';
export type AvatarProps = {
    /**
     * Children elements to be rendered inside the Avatar component.
     * Usually an `AvatarImage` and `AvatarIcon` component.
     */
    children?: React.ReactNode;
    /**
     * Source URL for the avatar image.
     *
     * @deprecated Use `AvatarImage` instead.
     */
    imageSrc?: string;
    /** Used as the alt text for the image and constructs the initial */
    name: string;
    /** The size of the avatar. */
    size: '16' | '20' | '24' | '32' | '40' | '48' | '64' | '96';
    /** The status of the avatar. */
    status?: 'audioCall' | 'available' | 'away' | 'busy' | 'customer' | 'offline' | 'onCall';
    /**
     * Indicates if the avatar represents a guest.
     *
     * This applies a slightly different style to the status indicator, giving it a rounded rectangle shape.
     * @default false
     */
    isGuest?: boolean;
} & Partial<StyleProps<AvatarParts>>;
export type GetAvatarStyles = (props: Pick<AvatarProps, 'isGuest' | 'status' | 'size'>) => Partial<Record<AvatarParts, string>>;
type AvatarImageParts = 'root' | 'brokenImage';
export type AvatarImageProps = {
    src: string;
} & Partial<StyleProps<AvatarImageParts>>;
export type GetAvatarImageTwStyles = (props: Pick<AvatarProps, 'size'>) => Partial<Record<AvatarImageParts, string>>;
type AvatarIconParts = 'root';
export type AvatarIconProps = {
    icon: (props: IconProps) => React.ReactNode;
} & Partial<StyleProps<AvatarIconParts>>;
export type GetAvatarIconTwStyles = (props: Pick<AvatarProps, 'size'>) => Partial<Record<AvatarIconParts, string>>;
export {};
