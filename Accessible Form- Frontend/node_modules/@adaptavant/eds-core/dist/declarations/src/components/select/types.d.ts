import { type StyleProps } from "../../shared/style-utils/index.js";
import { type FieldProps } from "../field/index.js";
export type Parts = 'root' | 'iconWrapper' | 'icon' | 'focusIndicator';
export type Option = {
    isDisabled?: boolean;
    label: string;
    value: string | number;
};
export type Group = {
    isDisabled?: boolean;
    options: ReadonlyArray<Option>;
    label: string;
};
export type OptionsOrGroups = ReadonlyArray<Option | Group>;
export type SelectProps = Partial<StyleProps<Parts>> & Pick<React.SelectHTMLAttributes<HTMLSelectElement>, 'defaultValue' | 'name' | 'onBlur' | 'onChange' | 'onFocus' | 'value'> & {
    options: OptionsOrGroups;
    /**
     * Placeholder text when no value is selected.
     */
    placeholder?: string;
};
export type GetSelectStyles = (props: Required<Pick<FieldProps, 'isDisabled' | 'size'>> & {
    isInvalid: boolean;
}) => Partial<Record<Parts, string>>;
