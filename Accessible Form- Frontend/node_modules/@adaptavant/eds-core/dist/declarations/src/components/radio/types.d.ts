import { type StyleProps } from "../../shared/style-utils/index.js";
type RadioParts = 'root' | 'radioPrimitiveRoot' | 'radioPrimitiveInput' | 'radioPrimitiveControl' | 'radioPrimitiveIcon' | 'label' | 'descriptionTrack' | 'description' | 'spacer';
type NativeRadioProps = React.InputHTMLAttributes<HTMLInputElement>;
type SharedRadioProps = Pick<NativeRadioProps, 'aria-describedby' | 'checked' | 'id' | 'name' | 'onBlur' | 'onClick' | 'onChange'> & {
    /**
     * When true, the radio will be announced as disabled to screen-readers and
     * styled to signify this.
     * @default false
     */
    isDisabled?: boolean;
    /** The size of the radio.
     * @default standard
     */
    size?: 'standard' | 'large';
    /** The value of the radio. */
    value?: string;
};
export type RadioProps = Partial<StyleProps<RadioParts>> & SharedRadioProps & {
    /**  Description of the radio. */
    description?: React.ReactNode;
    /** Label for the radio. */
    label: React.ReactNode;
};
export type GetRadioStyles = (props: Required<Pick<RadioProps, 'isDisabled' | 'size'>>) => Partial<Record<RadioParts, string>>;
type RadioPrimitiveParts = 'root' | 'input' | 'control' | 'icon';
export type RadioPrimitiveProps = Partial<StyleProps<RadioPrimitiveParts>> & SharedRadioProps;
export type GetRadioPrimitiveStyles = (props: Required<Pick<RadioPrimitiveProps, 'isDisabled' | 'size'>>) => Partial<Record<RadioPrimitiveParts, string>>;
export {};
