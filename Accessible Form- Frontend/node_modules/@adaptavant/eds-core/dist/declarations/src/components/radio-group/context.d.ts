import { type RadioGroupProps } from "./types.js";
export type UseRadioGroupStateProps<T extends string> = Pick<RadioGroupProps<T>, 'isDisabled' | 'name' | 'onChange' | 'size' | 'value'>;
/**
 * Provides the state passed into the RadioGroupContext provider.
 */
export declare function useRadioGroupState<Value extends string>({ isDisabled, name, onChange, size, value, }: UseRadioGroupStateProps<Value>): {
    isDisabled: boolean | ((value: Value) => boolean);
    name: string;
    onChange(event: React.ChangeEvent<HTMLInputElement>): void;
    size: "large" | "standard" | undefined;
    value: Value;
};
export declare const RadioGroupContextProvider: import("react").Provider<{
    isDisabled: boolean | ((value: any) => boolean);
    name: string;
    onChange(event: React.ChangeEvent<HTMLInputElement>): void;
    size: "large" | "standard" | undefined;
    value: any;
} | undefined>;
export declare function useRadioGroupContext(): {
    isDisabled: boolean | ((value: any) => boolean);
    name: string;
    onChange(event: import("react").ChangeEvent<HTMLInputElement>): void;
    size: "large" | "standard" | undefined;
    value: any;
} | undefined;
