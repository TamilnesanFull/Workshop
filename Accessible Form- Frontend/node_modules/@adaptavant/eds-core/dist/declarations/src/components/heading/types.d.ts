import { type StyleProps } from "../../shared/style-utils/index.js";
import { type ForwardRefComponent } from "../../shared/types.js";
import { type TextProps } from "../text/types.js";
type Parts = 'root';
type ValidHeading = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
export type HeadingProps = Pick<TextProps, 'fontWeight' | 'lineClamp' | 'textAlign' | 'textTransform' | 'tone'> & {
    /**
     * The typographic styles of the text.
     *
     * @deprecated please use text utility classes instead.
     */
    typography?: Extract<TextProps['typography'], 'heading.1' | 'heading.2' | 'heading.3' | 'heading.4' | 'heading.5' | 'heading.6'>;
    /** Heading element to render */
    as: ValidHeading;
    /** The content of the component. */
    children: React.ReactNode;
} & Partial<StyleProps<Parts>>;
export type PolymorphicHeading = ForwardRefComponent<ValidHeading, HeadingProps>;
export {};
