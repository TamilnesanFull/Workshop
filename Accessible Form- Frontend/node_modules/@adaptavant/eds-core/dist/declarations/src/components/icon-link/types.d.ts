import { type StyleProps } from "../../shared/style-utils/index.js";
import { type BrandStyles } from "../../shared/types.js";
import { type IconProps } from "../icon/index.js";
import { type IconButtonProps } from "../icon-button/index.js";
type Parts = 'root' | 'icon';
export type IconLinkProps = Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href' | 'rel' | 'target'> & {
    /**
     * An aria-label is required to describe the component to assistive tech users.
     * Describe the action or effect that will take place when the link is clicked.
     */
    'aria-label': string;
    /** The icon to display inside the icon button. */
    icon: (props: IconProps) => React.ReactNode;
    /** The size of the IconLink. */
    size?: Extract<IconButtonProps['size'], 'large' | 'standard' | 'small'>;
    /** The variant of the IconLink. */
    variant?: Extract<IconButtonProps['variant'], 'accentPrimary' | 'accentSecondary' | 'neutralPrimary' | 'neutralSecondary' | 'neutralSecondaryIntense' | 'neutralTertiary'>;
} & Partial<StyleProps<Parts>>;
export type GetIconLinkStyles = (props: Pick<BrandStyles, 'buttonRadius'> & Required<Pick<IconLinkProps, 'size' | 'variant'>>) => Partial<Record<Parts, string>>;
export {};
