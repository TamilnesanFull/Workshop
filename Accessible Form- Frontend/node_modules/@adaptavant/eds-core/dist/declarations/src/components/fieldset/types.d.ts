import { type StyleProps } from "../../shared/style-utils/index.js";
type Parts = 'root' | 'description' | 'legend' | 'errorMessage' | 'errorTrack' | 'errorIcon' | 'errorMessage' | 'wrapper';
export type FieldsetProps = {
    /** The content of the control group. */
    children: React.ReactNode;
    /**
     * A description for the field. Provides a hint such as specific requirements
     * for what to choose.
     */
    description?: React.ReactNode;
    /** Defines an identifier (ID) which must be unique. */
    id?: string;
    /**
     * Whether the input is disabled.
     * @default false
     */
    isDisabled?: boolean;
    /**
     * Whether user input is required on the input before form submission.
     * @default false
     */
    isRequired?: boolean;
    /** Describes the purpose of the field. */
    legend: React.ReactNode;
    /**
     * Message to show when the field is invalid.
     * When an error message is present, the fieldset will be announced as
     * invalid to screen-readers and styled to signify this.
     */
    errorMessage?: React.ReactNode;
    /**
     * Indicates whether the element's orientation is horizontal, vertical.
     * @default 'vertical'
     */
    orientation?: 'horizontal' | 'vertical';
} & Partial<StyleProps<Parts>>;
export type GetFieldsetStyles = (props: Pick<FieldsetProps, 'isDisabled' | 'orientation'> & {
    isInvalid: boolean;
}) => Partial<Record<Parts, string>>;
export {};
