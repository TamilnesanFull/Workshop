import { type IconProps } from "../icon/index.js";
/**
 * Button
 *
 * @description Buttons are used to initialize an action, their label should
 * express what action will occur when the user interacts with it.
 */
export declare const Button: import("react").ForwardRefExoticComponent<Pick<import("react").ButtonHTMLAttributes<HTMLButtonElement>, "id" | "form" | "children" | "type" | "aria-controls" | "aria-expanded" | "aria-haspopup" | "onFocus" | "onBlur" | "onKeyDown" | "onClick"> & {
    iconStart?: ((props: IconProps) => import("react").ReactNode) | undefined;
    iconEnd?: ((props: IconProps) => import("react").ReactNode) | undefined;
    isDisabled?: boolean | undefined;
    isLoading?: boolean | undefined;
    isPressed?: boolean | undefined;
    loadingLabel?: string | undefined;
    size?: "large" | "small" | "standard" | undefined;
    variant?: "accentPrimary" | "criticalPrimary" | "neutralPrimary" | "neutralSecondary" | "neutralTertiary" | "accentSecondary" | "criticalTertiary" | "neutralSecondaryIntense" | undefined;
} & Partial<import("../../shared/style-utils/index.js").StyleProps<"root" | "label" | "labelTrack" | "iconStart" | "iconEnd" | "loadingWrapper" | "loading">> & import("react").RefAttributes<HTMLButtonElement>>;
export declare const buttonSizeToIconSize: {
    large: "20";
    small: "16";
    standard: "16";
};
