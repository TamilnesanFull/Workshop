import { type AvatarProps } from "../../components/avatar/index.js";
import { type IconProps } from "../../components/icon/index.js";
import { type StyleProps } from "../../shared/style-utils/index.js";
type TagParts = 'root' | 'label';
export type TagProps = {
    /** Slot to render end adornment. */
    adornmentEnd?: React.ReactNode;
    /** Slot to render start adornment. */
    adornmentStart?: React.ReactNode;
    /** The children witch will be displayed as tag content. */
    children: React.ReactNode;
    /** Pass as HTML draggable attribute for better accessibility. */
    draggable?: boolean;
} & Partial<StyleProps<TagParts>>;
export type TagAvatarProps = Omit<AvatarProps, 'size'>;
export type GetTagStyles = ({ hasAdornmentStart, hasAdornmentEnd, }: {
    hasAdornmentStart: boolean;
    hasAdornmentEnd: boolean;
}) => Partial<Record<TagParts, string>>;
type TagButtonParts = 'button' | 'icon';
export type TagButtonProps = {
    /**
     * An aria-label is required to describe the component to assistive tech users.
     * Describe the action or effect that will take place when the link is clicked.
     */
    'aria-label': string;
    /** The icon to display inside the icon button. */
    icon: (props: IconProps) => React.ReactNode;
    /** Callback to invoke after click action. */
    onClick: () => void;
} & Partial<StyleProps<TagButtonParts>>;
export type GetTagButtonStyles = () => Partial<Record<TagButtonParts, string>>;
export {};
