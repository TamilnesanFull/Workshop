import { type StyleProps } from "../../shared/style-utils/index.js";
type ToggleParts = 'root' | 'label' | 'description' | 'descriptionTrack' | 'descriptionSpacer' | 'togglePrimitiveRoot' | 'togglePrimitiveInput' | 'togglePrimitiveControl' | 'togglePrimitiveIcon';
type NativeCheckboxProps = React.InputHTMLAttributes<HTMLInputElement>;
type SharedToggleProps = Pick<NativeCheckboxProps, 'aria-describedby' | 'checked' | 'id' | 'name' | 'onBlur' | 'onChange' | 'onClick' | 'value'> & {
    /**
     * When true, the toggle will be announced as disabled to screen-readers and
     * styled to signify this.
     * @default false
     */
    isDisabled?: boolean;
    /** The size of the toggle.
     * @default standard
     */
    size?: 'standard' | 'large';
};
export type ToggleProps = Partial<StyleProps<ToggleParts>> & SharedToggleProps & {
    /**  Description of the toggle. */
    description?: React.ReactNode;
    /** Label for the toggle. */
    label: React.ReactNode;
};
export type GetToggleStyles = (props: Required<Pick<ToggleProps, 'isDisabled' | 'size'>>) => Partial<Record<ToggleParts, string>>;
type TogglePrimitiveParts = 'root' | 'input' | 'control' | 'icon';
export type TogglePrimitiveProps = Partial<StyleProps<TogglePrimitiveParts>> & SharedToggleProps;
export type GetTogglePrimitiveStyles = (props: Required<Pick<TogglePrimitiveProps, 'isDisabled' | 'size'>>) => Partial<Record<TogglePrimitiveParts, string>>;
export {};
