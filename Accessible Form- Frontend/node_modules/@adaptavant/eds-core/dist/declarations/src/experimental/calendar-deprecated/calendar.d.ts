import { type Locale } from 'date-fns';
import { type DayProps, type RowProps } from 'react-day-picker';
import { type CalendarProps } from "./types.js";
/**
 * @deprecated use `Calendar` from `@adaptavant/eds-core/experimental` instead.
 *
 * @description
 * A calendar component that allows users to select a single date.
 */
export declare function Calendar({ className, classNames, isDateUnavailable, isToday, locale, maxValue, minValue, onValueChange, onVisibleMonthChange, style, styles, value, visibleMonth, ...consumerProps }: CalendarProps): import("react/jsx-runtime").JSX.Element;
export declare namespace Calendar {
    var displayName: string;
}
/**
 * Generate a series of 7 days, starting from the week, to use for formatting
 * the weekday names (Monday, Tuesday, etc.).
 *
 * Not exported from react-day-picker, see original
 * @see https://github.com/gpbl/react-day-picker/blob/main/src/components/HeadRow/utils/getWeekdays.ts
 */
export declare function getWeekdays(
/** The date-fns locale object used to localize dates. */
locale?: Locale, 
/** The index of the first day of the week (0 - Sunday). */
weekStartsOn?: 0 | 1 | 2 | 3 | 4 | 5 | 6, 
/** Use ISOWeek instead of locale/ */
ISOWeek?: boolean): Date[];
/** Render a row in the calendar. */
export declare function Row(props: RowProps & {
    isToday?: (date: Date) => boolean;
}): import("react/jsx-runtime").JSX.Element;
/**
 * The content of a day cell â€“ as a button or span element according to its
 * modifiers.
 */
export declare function Day(props: DayProps & {
    isToday?: (date: Date) => boolean;
}): import("react/jsx-runtime").JSX.Element;
