import { type ComboboxListboxProps } from "./types.js";
export declare const ComboboxListbox: <Option extends object>(props: Omit<import("../listbox/index.js").ListboxProps<Option>, "id"> & {
    noResultsFallback?: import("react").ReactNode;
} & import("react").RefAttributes<HTMLDivElement>) => JSX.Element;
export declare function useComboboxListbox<Option extends object>({ children, className, classNames, noResultsFallback, options, style, styles, ...consumerProps }: ComboboxListboxProps<Option>, forwardedRef: React.ForwardedRef<HTMLDivElement>): {
    listboxProps: {
        'aria-activedescendant': string | undefined;
        'aria-labelledby': string;
        children: string | number | boolean | import("react").ReactElement<any, string | import("react").JSXElementConstructor<any>> | Iterable<import("react").ReactNode> | ((option: Option) => import("react").ReactNode) | null | undefined;
        id: string;
        options: readonly Option[] | undefined;
        ref: import("react").ForwardedRef<HTMLDivElement>;
    } & import("../../shared/style-utils/index.js").StylePart;
    noResultsFallback: import("react").ReactNode;
};
