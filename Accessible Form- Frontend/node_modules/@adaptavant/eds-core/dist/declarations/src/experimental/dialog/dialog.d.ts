import { type DialogProps } from "./types.js";
/**
 * Dialog
 *
 * @description
 * A Dialog component that prevents interaction with the rest of the application.
 * Dialog component renders its children (DialogTitle, DialogContent, DialogFooter) nodes in front of a backdrop component.
 * Offers important features:
 * - It properly manages focus; moves inside Dialog, and keeping it there until the Dialog is closed.
 * - It disables scrolling of the page content while open.
 * - It render with Portal by default to avoid Stacking issues.
 * - Manages the appropriate ARIA roles.
 * - Creates a backdrop, for disabling interaction below the Dialog.
 * - It can be closed by pressing the `Esc` key or clicking on the overlay.
 * - It can be controlled by the `open` prop.
 * - It can be delayed to animate in and out.
 *
 * Initially this is only for internal use,
 * as base for such components like Modals, Drawers or Sheets,
 * as consumer you should consider using one of the above first.
 */
export declare function Dialog({ children, className, classNames, closeOnEsc, closeOnOverlayClick, delay, descriptionId, onClose, onEscPress, onOverlayClick, open, role, style, styles, titleId, container, ...consumerProps }: DialogProps): import("react").ReactPortal | null;
export declare namespace Dialog {
    var displayName: string;
}
