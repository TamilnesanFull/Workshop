import { type FieldProps } from "../../components/field/index.js";
import { type TextInputProps } from "../../components/text-input/index.js";
type SearchInputParts = 'root' | 'adornmentStart' | 'adornmentEnd';
export type SearchInputProps = Omit<TextInputProps, 'type' | 'adornmentStart' | 'adornmentEnd'> & {
    /**
     * Callback invoked when the clear button is pressed or the `Escape` key is used.
     * For controlled components (with a `value` prop), this prop is required for
     * the clear button to function and for the `Escape` key to clear the input.
     * For uncontrolled components, it's optional and can be used for additional
     * actions upon clearing.
     *
     * @example
     * ```tsx
     * const [searchValue, setSearchValue] = useState('');
     * <SearchInput
     *   value={searchValue}
     *   onChange={(e) => setSearchValue(e.target.value)}
     *   onClear={() => setSearchValue('')}
     * />
     * ```
     */
    onClear?: () => void;
};
export type GetSearchInputStyles = (props: Required<Pick<FieldProps, 'size' | 'isDisabled'>>) => Partial<Record<SearchInputParts, string>>;
export {};
