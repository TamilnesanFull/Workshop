import { type StyleProps } from "../../shared/style-utils/index.js";
type TabsParts = 'root';
export type TabsProps = Partial<StyleProps<TabsParts>> & {
    children: React.ReactNode;
    /**	The default selected value for the Tabs component. */
    defaultValue?: string;
    /**	 The selected value for the Tabs when used as controlled component. */
    selectedValue?: string;
    /**  Dispatch function for updating the selected value of the Tabs when used as controlled component. */
    onSelectedValueChange?: React.Dispatch<React.SetStateAction<string | undefined>>;
    /** The size of the Tabs component.
     * @default 'standard'
     */
    size?: 'standard' | 'small';
};
export type GetTabsStyles = () => Partial<Record<TabsParts, string>>;
type TabListParts = 'root' | 'tabItemWrapper' | 'highlighter' | 'scrollMaskStart' | 'scrollMaskEnd';
export type TabListProps = Partial<StyleProps<TabListParts>> & {
    children: React.ReactNode;
};
export type GetTabListStyles = (props: Required<Pick<TabsProps, 'size'>>) => Partial<Record<TabListParts, string>>;
type TabItemParts = 'root';
export type TabItemProps = Partial<StyleProps<TabItemParts>> & {
    children: React.ReactNode;
    /** The value of the tab. */
    value: string;
    /** Whether the tab is disabled. */
    disabled?: boolean;
};
export type GetTabItemStyles = (props: Required<Pick<TabsProps, 'size'>>) => Partial<Record<TabItemParts, string>>;
type TabContentParts = 'root';
export type TabContentProps = Partial<StyleProps<TabContentParts>> & {
    children: React.ReactNode;
    /** The value of the tab. */
    value: string;
};
export type GetTabContentStyles = () => Partial<Record<TabContentParts, string>>;
export {};
