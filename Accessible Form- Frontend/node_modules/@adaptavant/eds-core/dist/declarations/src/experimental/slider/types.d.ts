import { type StyleProps } from "../../shared/style-utils/index.js";
type Parts = 'root' | 'baseArea' | 'container' | 'filledArea' | 'thumb' | 'adornmentStart' | 'adornmentEnd';
export type SliderProps = Partial<StyleProps<Parts>> & {
    /** Slot to render end adornment. */
    adornmentEnd?: React.ReactNode;
    /** Slot to render start adornment. */
    adornmentStart?: React.ReactNode;
    /**
     * ID of the element that labels the slider for accessibility purposes.
     * Should reference an existing element ID.
     */
    ariaLabelledBy: string;
    /**
     * The minimum allowed value of the slider.
     * Defaults to 0 if not provided.
     */
    minValue?: number;
    /**
     * The maximum allowed value of the slider.
     * Defaults to 100 if not provided.
     */
    maxValue?: number;
    /**
     * The step increment for the slider.
     * Defaults to 1 if not provided.
     */
    step?: number;
    /**
     * Controlled value of the slider, for situations where
     * the slider's value is managed externally.
     */
    value?: number;
    /**
     * The default value of the slider, used for uncontrolled components.
     * Should be within `minValue` and `maxValue`.
     */
    defaultValue?: number;
    /**
     * If true, disables the slider, preventing user interaction.
     */
    isDisabled?: boolean;
    /**
     * Callback function triggered when the slider value changes.
     * Provides the new value as an argument.
     */
    onValueChange?: (value: number) => void;
};
export type GetSliderStyles = (props: Required<Pick<SliderProps, 'isDisabled'>>) => Partial<Record<Parts, string>>;
export {};
