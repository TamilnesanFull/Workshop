import { type DialogHeaderProps } from "../dialog/index.js";
import { type ModalProps } from "./types.js";
/**
 * Modal
 *
 * @description
 * A modal component that prevents interaction with the rest of the application.
 * Modal component renders its children (ModalTitle, ModalContent, ModalFooter) nodes in front of a backdrop component.
 * Offers important features:
 * - It properly manages focus; moves inside modal, and keeping it there until the modal is closed.
 * - It disables scrolling of the page content while open.
 * - It render with Portal by default to avoid Stacking issues.
 * - Ensure Modal never touch edge of screen (16px space is reserved).
 * - Manages the appropriate ARIA roles.
 * - Creates a backdrop, for disabling interaction below the modal.
 */
export declare function Modal({ children, className, classNames, mobileFriendly, size, style, styles, togglePoint, ...consumerProps }: ModalProps): import("react/jsx-runtime").JSX.Element;
export declare namespace Modal {
    var displayName: string;
}
export declare const ModalContent: {
    ({ children, className, classNames, style, styles, ...consumerProps }: import("../dialog/index.js").DialogContentProps): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
export declare const ModalFooter: {
    ({ children, className, classNames, style, styles, ...consumerProps }: import("../dialog/index.js").DialogFooterProps): import("react/jsx-runtime").JSX.Element;
    displayName: string;
};
export declare function ModalHeader({ children, closeButtonProps, ...consumerProps }: DialogHeaderProps): import("react/jsx-runtime").JSX.Element;
export declare namespace ModalHeader {
    var displayName: string;
}
