import { type TimeZoneInfo } from "./time-zone-search.js";
export type TimeZonePickerArgs = {
    /**
     * An optional identifier for a preferred time zone.
     */
    preferredTzIdentifier?: string;
};
/**
 * Custom hook for constructing a TimeZonePicker using the FilterMenu component.
 */
export declare function useTimeZonePicker({ preferredTzIdentifier, }?: TimeZonePickerArgs): {
    /**
     * Currently filtered options matching the search term.
     */
    filteredOptions: TimeZoneInfo[];
    /**
     * The currently selected time zone option.
     */
    selectedOption: TimeZoneInfo;
    /**
     * Function to call and spread props for FilterMenu.
     */
    getFilterMenuProps: () => {
        popoverMaxWidth: number;
    };
    /**
     * Function to call and spread props for FilterMenuTrigger.
     */
    getFilterMenuTriggerProps: () => {
        children: import("react/jsx-runtime").JSX.Element;
    };
    /**
     * Function to call and spread props for FilterMenuSearchField.
     */
    getFilterMenuSearchFieldProps: () => {
        label: string;
    };
    /**
     * Function to call and spread props for FilterMenuSearchInput.
     */
    getFilterMenuSearchInputProps: () => {
        onClear: () => void;
        onChange: (event: import("react").ChangeEvent<HTMLInputElement>) => void;
        value: string;
        placeholder: string;
    };
    /**
     * Function to call and spread props for FilterMenuListbox.
     */
    getFilterMenuListboxProps: () => {
        noResultsFallback: import("react/jsx-runtime").JSX.Element;
        options: TimeZoneInfo[];
    };
    /**
     * Function to call with the `option` and spread props for the
     * FilterMenuItem.
     */
    getFilterMenuItemProps: (option: TimeZoneInfo) => {
        children: import("react/jsx-runtime").JSX.Element;
        className: string;
        id: string;
        isSelected: boolean;
        onClick: () => void;
        verticalAlign: "top";
    };
};
