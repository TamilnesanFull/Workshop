import { forwardRef } from 'react';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { t as tw } from './tw-c6a9a210.esm.js';
import { t as typography } from './styles-267c9284.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { T as Text } from './text-3fc88ad6.esm.js';

const getLabelStyles = ({
  labelVisibility,
  size
}) => ({
  root: tw`
		${labelVisibility === 'hidden' ? 'sr-only' : ''}
		${typography[size]}
		flex
		gap-1
	`,
  secondaryLabel: tw`
		${typography[size]}
		break-normal
		text-secondary
	`
});

/**
 * Label
 *
 * @description
 * Used to label a form field.
 */

const Label = /*#__PURE__*/forwardRef(function Label({
  as = 'label',
  children,
  className = '',
  classNames = {},
  labelVisibility = 'visible',
  secondaryLabel,
  size = 'standard',
  style = {},
  styles = {},
  ...consumerProps
}, forwardedRef) {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getLabelStyles({
      labelVisibility,
      size
    })
  });
  return /*#__PURE__*/jsxs(Text, {
    ...consumerProps,
    as: as,
    ref: forwardedRef,
    ...styleProps('root'),
    children: [children, secondaryLabel ? /*#__PURE__*/jsx(Text, {
      ...styleProps('secondaryLabel'),
      children: secondaryLabel
    }) : null]
  });
});
Label.displayName = 'Label';

export { Label as L };
