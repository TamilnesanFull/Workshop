'use client';
import { useCachedChildren } from './use-cached-children-3db72c4a.esm.js';
import { a as forwardRefWithGenericComponent } from './forward-ref-a0e1d5d1.esm.js';
import { jsx } from 'react/jsx-runtime';
import { B as Box } from './box-a5dda214.esm.js';
import 'react';
import './index-dd10a77e.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';

/**
 * @private
 * Listbox
 *
 * @description
 * Used for lists from which a user can select one or more items.
 *
 * Assigns a role of 'listbox' for accessibility purposes.
 * If `options` are provided, children can be a function that we can call to
 * render the options.
 *
 * @example
 * <Listbox options={options}>
 * 	{(option) => (
 * 		<div aria-selected={isSelected} role="option">
 * 			{option.label}
 * 		</div>
 * 	)}
 * </Listbox>
 */
const Listbox = forwardRefWithGenericComponent(function Listbox({
  children,
  options,
  ...consumerProps
}, forwardedRef) {
  const cachedChildren = useCachedChildren({
    children,
    options
  });
  return /*#__PURE__*/jsx(Box, {
    ...consumerProps,
    ref: forwardedRef,
    role: "listbox",
    tabIndex: -1,
    children: cachedChildren
  });
});

export { Listbox };
