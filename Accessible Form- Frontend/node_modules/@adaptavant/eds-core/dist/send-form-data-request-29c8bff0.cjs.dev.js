'use strict';

const roundNumberToDecimal = (number, decimal = 2) => Math.round(number * 10 ** decimal) / 10 ** decimal;

const clamp = (value, min, max) => Math.min(Math.max(value, min), max);

const genericSendFormDataRequest = async (url, file, formParams) => {
  var _uploadedImageJson$da;
  const formData = new FormData();
  for (const key in formParams) {
    formData.append(key, formParams[key]);
  }
  formData.append('file', file);
  const uploadedImage = await fetch(url, {
    mode: 'cors',
    method: 'POST',
    body: formData
  });
  const uploadedImageJson = await uploadedImage.json();
  return uploadedImageJson === null || uploadedImageJson === void 0 || (_uploadedImageJson$da = uploadedImageJson.data) === null || _uploadedImageJson$da === void 0 ? void 0 : _uploadedImageJson$da.file;
};

const sendFormDataRequest = async (url, file, formParams) => {
  const response = await genericSendFormDataRequest(url, file, formParams);
  return response === null || response === void 0 ? void 0 : response.img_serve_url;
};

exports.clamp = clamp;
exports.roundNumberToDecimal = roundNumberToDecimal;
exports.sendFormDataRequest = sendFormDataRequest;
