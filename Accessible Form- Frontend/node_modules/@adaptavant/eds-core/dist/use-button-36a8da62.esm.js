'use client';
import { mergeRefs } from '@react-aria/utils';
import { useRef, useCallback } from 'react';

/**
 * Provides button-specific properties and handles click events, considering
 * loading and disabled states.
 */
function useButton({
  isDisabled,
  isLoading,
  isPressed,
  onClick
}, forwardedRef) {
  const internalRef = useRef(null);
  const handleClick = useCallback(event => {
    if (!internalRef.current) {
      throw new Error('Ref returned from useButton not attached to component');
    }
    internalRef.current.focus();
    if (isDisabled || isLoading || typeof onClick !== 'function') return;
    onClick(event);
  }, [isDisabled, isLoading, onClick]);
  return {
    buttonProps: {
      'aria-disabled': isLoading || isDisabled || undefined,
      'aria-pressed': typeof isPressed === 'boolean' ? isPressed : undefined,
      onClick: handleClick,
      ref: mergeRefs(internalRef, forwardedRef)
    }
  };
}

export { useButton };
