'use client';
import { useRef, useEffect, Fragment } from 'react';
import { useDropdownContext } from './context-6e374e37.esm.js';
import { a as forwardRefWithGenericComponent } from './forward-ref-a0e1d5d1.esm.js';
import { useComboboxListbox } from './combobox-listbox-c2913f04.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { Listbox } from './listbox-279326e9.esm.js';

const FilterMenuListbox = forwardRefWithGenericComponent(function FilterMenuListbox(props, forwardedRef) {
  const {
    listboxProps,
    noResultsFallback
  } = useComboboxListbox(props, forwardedRef);
  const {
    descendantNodes,
    dispatch,
    isMenuOpen
  } = useDropdownContext();

  // Ref to track if the component has already been initialized
  const isFirstRenderRef = useRef(true);

  /**
   * Sets the active descendant in the dropdown when the menu is open.
   * Finds the selected option within the popover and dispatches an action
   * to update the context with the index and ID of the active option.
   */
  useEffect(() => {
    if (!isMenuOpen || !descendantNodes || !isFirstRenderRef.current) {
      return;
    }
    const options = Array.from(descendantNodes);
    const activeOption = options.find(option => option.getAttribute('aria-selected') === 'true');
    if (activeOption) {
      dispatch({
        type: 'SET_ACTIVE_DESCENDANT_INDEX',
        payload: {
          activeIndex: options.indexOf(activeOption),
          activeId: activeOption.id
        }
      });
    }
    isFirstRenderRef.current = false;
  }, [descendantNodes, dispatch, isMenuOpen]);
  return /*#__PURE__*/jsxs(Fragment, {
    children: [/*#__PURE__*/jsx(Listbox, {
      ...listboxProps
    }), noResultsFallback]
  });
});

export { FilterMenuListbox };
