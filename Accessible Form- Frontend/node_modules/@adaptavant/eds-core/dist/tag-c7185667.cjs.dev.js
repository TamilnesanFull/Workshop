'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('./index-3bdbdb42.cjs.dev.js');
var styles = require('./styles-778f345d.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var text = require('./text-b4d8b4ef.cjs.dev.js');
var track = require('./track-1da464e0.cjs.dev.js');
require('./tw-merge-70bc959c.cjs.dev.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');
require('react');

/**
 * Tag
 *
 * @description A tag component is an item with the short label, which helps
 * in any sort of categorization or filtering. Usually, it appears in a group.
 * Each Tag can be interactive for a better user experience.
 */

function Tag({
  adornmentEnd,
  adornmentStart,
  children,
  className = '',
  classNames = {},
  style = {},
  styles: styles$1 = {},
  ...consumerProps
}) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles: styles$1,
    tw: styles.getTagStyles({
      hasAdornmentStart: Boolean(adornmentStart),
      hasAdornmentEnd: Boolean(adornmentEnd)
    })
  });
  return /*#__PURE__*/jsxRuntime.jsx(track.Track, {
    ...consumerProps,
    as: "span",
    classNames: {
      railEnd: `
					flex
					items-center
				`,
      railStart: `
					flex
					items-center
				`
    },
    railEnd: adornmentEnd,
    railStart: adornmentStart,
    ...styleProps('root'),
    children: /*#__PURE__*/jsxRuntime.jsx(text.Text, {
      ...styleProps('label'),
      children: children
    })
  });
}
Tag.displayName = 'Tag';

exports.Tag = Tag;
