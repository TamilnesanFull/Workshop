'use strict';

var tw = require('./tw-9929267e.cjs.prod.js');

const getSnackbarContentStyles = () => ({
  root: tw.tw`
		bg-inverse-secondary
		flex 
		focus-visible:focus-ring 
		gap-2 
		group
		grow-0 
		items-center 
		min-h-[44px]
		px-4 
		py-2 
		relative 
		rounded-8px 
		select-none 
		shadow-40
		shrink-0 
		touch-none 
		transition-transform 
		w-[360px]
	`,
  title: tw.tw`
		font-strong
		line-clamp-2
		text-body-12 
		text-inverse 
	`,
  description: tw.tw`
		-mt-0.5
		line-clamp-2
		text-body-12 
		text-inverse-secondary 
	`,
  actionButton: tw.tw`
		focus-visible:focus-ring 
		font-stronger
		px-1 
		py-0.5
		rounded-4px 
		shrink-0
		text-body-12 
		text-inverse 
		underline
		underline-offset-2
	`,
  closeButton: tw.tw`
		-start-2 
		-top-2 
		absolute 
		active:bg-inverse-tertiary-pressed
		after:absolute #1
		after:bottom-0
		after:content-['']
		after:end-0
		after:rounded-full
		after:scale-150
		after:start-0
		after:top-0
		bg-inverse-tertiary 
		focus-visible:focus-ring 
		focus-visible:opacity-100
		group-hover:opacity-100
		hover:bg-inverse-tertiary-hover 
		opacity-0
		p-0.5
		rounded-full
		text-constant-white 
		transition-opacity
	`
  // #1 - The ::after element helps to expands the tap area of the button, making it easier to click
});
const getSnackbarStyles = () => {
  return {
    root: tw.tw`
			animate-[snackbar-transition_0.3s_cubic-bezier(0.16,_1,_0.3,_1)] #1
			fixed
			z-10
		`
    // #1 - This is an on enter animation that fades in the snackbar. But on exit animation can't be done using pure css.
    // So, we might have to use a library like framer-motion, react-transition-group or some custom hook to animate the exit.
    // Update:: Verify how Sheet has exit animation and try to replicate same here.
  };
};

// Calculates the offset based on the `placement` prop
const offsetStylesLookup = ({
  offset = [8, 8],
  placement
}) => {
  const [offsetBlock, offsetInline] = offset;
  switch (placement) {
    case 'top-start':
      return {
        top: `${offsetBlock}px`,
        'inset-inline-start': `${offsetInline}px`
      };
    case 'top-end':
      return {
        top: `${offsetBlock}px`,
        'inset-inline-end': `${offsetInline}px`
      };
    case 'bottom-start':
      return {
        bottom: `${offsetBlock}px`,
        'inset-inline-start': `${offsetInline}px`
      };
    case 'bottom-end':
      return {
        bottom: `${offsetBlock}px`,
        'inset-inline-end': `${offsetInline}px`
      };
  }
};

exports.getSnackbarContentStyles = getSnackbarContentStyles;
exports.getSnackbarStyles = getSnackbarStyles;
exports.offsetStylesLookup = offsetStylesLookup;
