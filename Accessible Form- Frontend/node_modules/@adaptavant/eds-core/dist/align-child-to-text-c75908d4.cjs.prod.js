'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var index = require('./index-7955fb8e.cjs.prod.js');
var zeroWidthSpace = require('./zero-width-space-59cc78a9.cjs.prod.js');
var jsxRuntime = require('react/jsx-runtime');
var box = require('./box-e39057bd.cjs.prod.js');
require('./tw-merge-885aa7a8.cjs.prod.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.prod.js');

/**
 * AlignChildToText
 *
 * @description a component that uses a zero-width space to vertically align a
 * child element such as an icon with a line of text. This is especially useful
 * when text needs to wrap.
 *
 * @example
 * <Text>
 * 	<AlignChildToText>
 * 		<MapPinIcon />
 * 	</AlignChildToText>
 * 	{address}
 * </Text>
 */
const AlignChildToText = /*#__PURE__*/React.forwardRef(function AlignChildToText({
  as = 'span',
  children,
  className = '',
  classNames = {},
  style = {},
  styles = {},
  ...consumerProps
}, forwardedRef) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: {
      root: `
				inline-flex
				items-center
			`,
      child: `
				flex
				h-0
				items-center
			`
    }
  });
  return /*#__PURE__*/jsxRuntime.jsxs(box.Box, {
    ...consumerProps,
    as: as,
    ref: forwardedRef,
    ...styleProps('root'),
    children: [/*#__PURE__*/jsxRuntime.jsx(zeroWidthSpace.ZeroWidthSpace, {}), /*#__PURE__*/jsxRuntime.jsx(box.Box, {
      as: "span",
      ...styleProps('child'),
      children: children
    })]
  });
});
AlignChildToText.displayName = 'AlignChildToText';

exports.AlignChildToText = AlignChildToText;
