'use client';
import { createContext, useContext } from 'react';
import { m as mergeIds } from './merge-ids-c2d2d3d7.esm.js';

const FieldContext = /*#__PURE__*/createContext(undefined);
const FieldContextProvider = FieldContext.Provider;
function useFieldContext() {
  const context = useContext(FieldContext);
  if (!context) {
    throw new Error('useFieldContext must be used within a FieldContextProvider');
  }
  return context;
}

/**
 * Returns aria attributes for an input based on context and optional props.
 */
function useInputA11yProps(props) {
  const context = useContext(FieldContext);
  if (!context) {
    throw new Error('useInputA11yProps must be used within a FieldContextProvider');
  }
  return {
    'aria-describedby': mergeIds(context.description ? context.descriptionId : undefined, context.errorMessage ? context.errorMessageId : undefined),
    'aria-disabled': props.isDisabled || context.isDisabled || undefined,
    'aria-invalid': props.isInvalid || context.isInvalid || undefined,
    'aria-required': props.isRequired || context.isRequired || undefined,
    readOnly: props.isDisabled || context.isDisabled || undefined,
    // disabled: props.isDisabled || context.isDisabled || false,
    id: props.id || context.controlId
  };
}

export { FieldContextProvider, useFieldContext, useInputA11yProps };
