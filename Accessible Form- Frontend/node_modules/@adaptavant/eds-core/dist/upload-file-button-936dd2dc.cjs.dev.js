'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var jsxRuntime = require('react/jsx-runtime');

const UploadFileButton = ({
  accept,
  children,
  multiple,
  onFilesChange
}) => {
  const inputRef = React.useRef(null);
  const handleClick = () => {
    var _inputRef$current;
    return (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click();
  };
  const handleInputChange = event => onFilesChange([...(event.target.files ?? [])]);
  return /*#__PURE__*/jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [/*#__PURE__*/React.cloneElement(children, {
      onClick: handleClick
    }), /*#__PURE__*/jsxRuntime.jsx("input", {
      accept: accept,
      "data-testid": "upload-file-button",
      hidden: true,
      multiple: multiple,
      name: "file",
      onChange: handleInputChange,
      ref: inputRef,
      type: "file",
      value: ""
    })]
  });
};

exports.UploadFileButton = UploadFileButton;
