'use client';
import { useRef } from 'react';
import { createPortal } from 'react-dom';
import { t as twMerge } from './tw-merge-91a8b6ee.esm.js';
import { jsx } from 'react/jsx-runtime';
import { BrandStylesProvider } from './config-e49cd2d8.esm.js';
import { TranslationsProvider } from './translations-1012abc4.esm.js';
import { CreatePortalProvider } from './create-portal-5c09fed2.esm.js';
import { TooltipProvider } from './tooltip-342f030f.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';

function Root({
  brand,
  children,
  className = '',
  colorScheme,
  translations,
  ...consumerProps
}) {
  const rootRef = useRef(null);
  return /*#__PURE__*/jsx(BrandStylesProvider, {
    value: brand.config,
    children: /*#__PURE__*/jsx(TranslationsProvider, {
      value: translations,
      children: /*#__PURE__*/jsx(CreatePortalProvider, {
        value: (children, container) => rootRef.current ? /*#__PURE__*/createPortal(children, container || rootRef.current) : null,
        children: /*#__PURE__*/jsx(TooltipProvider, {
          children: /*#__PURE__*/jsx("div", {
            ...consumerProps,
            className: twMerge(colorSchemeStylesLookup[colorScheme], 'bg-canvas', 'min-w-0', 'text-primary', className) || undefined,
            ref: rootRef,
            children: children
          })
        })
      })
    })
  });
}
const colorSchemeStylesLookup = {
  dark: 'dark',
  light: 'light',
  system: undefined
};

export { Root };
