'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var use_cached_children = require('./use-cached-children-6b15e486.cjs.dev.js');
var forwardRef = require('./forward-ref-6c731e6e.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var box = require('./box-88b49271.cjs.dev.js');
require('react');
require('./index-3bdbdb42.cjs.dev.js');
require('./tw-merge-70bc959c.cjs.dev.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');

/**
 * @private
 * Listbox
 *
 * @description
 * Used for lists from which a user can select one or more items.
 *
 * Assigns a role of 'listbox' for accessibility purposes.
 * If `options` are provided, children can be a function that we can call to
 * render the options.
 *
 * @example
 * <Listbox options={options}>
 * 	{(option) => (
 * 		<div aria-selected={isSelected} role="option">
 * 			{option.label}
 * 		</div>
 * 	)}
 * </Listbox>
 */
const Listbox = forwardRef.forwardRefWithGenericComponent(function Listbox({
  children,
  options,
  ...consumerProps
}, forwardedRef) {
  const cachedChildren = use_cached_children.useCachedChildren({
    children,
    options
  });
  return /*#__PURE__*/jsxRuntime.jsx(box.Box, {
    ...consumerProps,
    ref: forwardedRef,
    role: "listbox",
    tabIndex: -1,
    children: cachedChildren
  });
});

exports.Listbox = Listbox;
