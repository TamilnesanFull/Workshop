'use client';
import { useState, useEffect } from 'react';

/**
 * Hook to animate visibility of a component
 * @param initialVisible false
 * @param delay
 * @returns { shouldRender, toggleVisibility }
 */
function useAnimateVisibility(initialVisible = false, /** milliseconds */
delay) {
  const [isVisible, setIsVisible] = useState(initialVisible);
  const [shouldRender, setShouldRender] = useState(isVisible);

  /** Set visible if initial prop change */
  useEffect(() => {
    setIsVisible(initialVisible);
  }, [initialVisible]);
  useEffect(() => {
    if (!delay) {
      setShouldRender(isVisible);
      return;
    }
    if (isVisible) {
      /** Show component */
      setShouldRender(true);
    } else {
      /**  Hide component after animation delay */
      const timeoutId = setTimeout(() => setShouldRender(false), delay);

      /** Clean timeout */
      return () => clearTimeout(timeoutId);
    }
  }, [isVisible, delay]);
  const toggleVisibility = () => {
    setIsVisible(prevVisible => !prevVisible);
  };
  return {
    shouldRender,
    toggleVisibility
  };
}

export { useAnimateVisibility };
