'use client';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { t as tw } from './tw-c6a9a210.esm.js';
import { jsx } from 'react/jsx-runtime';
import { W as WarningIcon } from './warning-icon-3c789a97.esm.js';
import { E as ErrorIcon } from './error-icon-1fdb44d1.esm.js';
import { I as InformationIcon } from './information-icon-e696ea58.esm.js';
import { C as CheckIcon } from './check-icon-17dad0a3.esm.js';
import { Track } from './track-26dc4fe4.esm.js';
import { AlignChildToText } from './align-child-to-text-c6521616.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';
import 'react';
import './styles-53001919.esm.js';

const getAlertStyles = ({
  variant
}) => ({
  root: tw`
		${alertVariantStylesLookup[variant]}
		gap-2
		px-3
		py-2
		rounded-8px
		text-body-12
	`,
  icon: tw`
		${alertVariantFillStylesLookup[variant]}
	`
});
const alertVariantStylesLookup = {
  caution: tw`
		bg-caution-secondary 
		text-caution-secondary
	`,
  critical: tw`
		bg-critical-secondary 
		text-critical-secondary
	`,
  info: tw`
		bg-canvas-secondary 
		text-primary
	`,
  positive: tw`
		bg-positive-secondary 
		text-positive-secondary
	`
};
const alertVariantFillStylesLookup = {
  caution: tw`
		fill-caution
	`,
  critical: tw`
		fill-critical
	`,
  info: tw`
		fill-primary
	`,
  positive: tw`
		fill-positive
	`
};

/**
 * Alert component displays important information to the user.
 *
 * @description It captures the user's attention without disrupting their task.
 */

function Alert({
  children,
  className = '',
  classNames = {},
  style = {},
  styles = {},
  variant = 'info',
  ...consumerProps
}) {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getAlertStyles({
      variant
    })
  });
  const Icon = variantToIconMap[variant];
  return /*#__PURE__*/jsx(Track, {
    ...consumerProps,
    ...styleProps('root'),
    children: children,
    railEnd: undefined,
    railStart: /*#__PURE__*/jsx(AlignChildToText, {
      children: /*#__PURE__*/jsx(Icon, {
        ...styleProps('icon'),
        size: "16"
      })
    }),
    role: "alert",
    verticalAlign: "top"
  });
}
const variantToIconMap = {
  caution: WarningIcon,
  critical: ErrorIcon,
  info: InformationIcon,
  positive: CheckIcon
};

export { Alert };
