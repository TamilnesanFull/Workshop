'use client';
import { forwardRef } from 'react';
import { useCancellableHandler } from './checkbox-primitive-7f83b97f.esm.js';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { a as getTogglePrimitiveStyles } from './styles-5ca722fa.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { B as Box } from './box-a5dda214.esm.js';
import { AlignChildToText } from './align-child-to-text-c6521616.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';
import './styles-267c9284.esm.js';
import './tw-c6a9a210.esm.js';

/**
 * TogglePrimitive
 *
 * @description
 * Component that renders a toggle input. Must be wrapped in a \<label\> element.
 *
 * @example
 * <Track
 *   as="label"
 *   gap="4"
 *   htmlFor={id}
 *   railStart={<Toggle {...props} id={id} />}
 * >
 *   <Text>Label</Text>
 * </Track>
 */
const TogglePrimitive = /*#__PURE__*/forwardRef(function TogglePrimitive({
  checked,
  className = '',
  classNames = {},
  id,
  isDisabled = false,
  name,
  onBlur,
  onChange,
  onClick,
  size = 'standard',
  style = {},
  styles = {},
  ...consumerProps
}, forwardedRef) {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getTogglePrimitiveStyles({
      isDisabled,
      size
    })
  });
  const handleOnChange = useCancellableHandler(onChange, isDisabled);
  const handleOnClick = useCancellableHandler(onClick, isDisabled);
  return /*#__PURE__*/jsxs(AlignChildToText, {
    ...styleProps('root'),
    children: [/*#__PURE__*/jsx(Box, {
      ...consumerProps,
      "aria-disabled": isDisabled || undefined,
      as: "input",
      checked: checked,
      id: id,
      name: name,
      onBlur: onBlur,
      onChange: handleOnChange,
      onClick: handleOnClick,
      ref: forwardedRef,
      type: "checkbox",
      ...styleProps('input')
    }), /*#__PURE__*/jsx(Box, {
      as: "span",
      ...styleProps('control'),
      children: /*#__PURE__*/jsx(Box, {
        "aria-hidden": true,
        as: "svg",
        fillRule: "evenodd",
        focusable: false,
        preserveAspectRatio: "xMidYMid meet",
        role: "img",
        viewBox: "0 0 480 480",
        xmlns: "http://www.w3.org/2000/svg",
        ...styleProps('icon'),
        children: /*#__PURE__*/jsx("circle", {
          cx: "240",
          cy: "240",
          r: "240"
        })
      })
    })]
  });
});

export { TogglePrimitive };
