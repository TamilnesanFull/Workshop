'use strict';

var React = require('react');
var index = require('./index-3bdbdb42.cjs.dev.js');
var tw = require('./tw-cabb7e4c.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var box = require('./box-88b49271.cjs.dev.js');
var growYourBrandIcon = require('./grow-your-brand-icon-6c89c797.cjs.dev.js');
var setmoreIcon = require('./setmore-icon-45794869.cjs.dev.js');

const getLoadingStyles = ({
  size,
  tone
}) => ({
  root: tw.tw`
		${loadingSizeStylesLookup[size]}
		relative
	`,
  icon: tw.tw`
		${loadingIconSizeStylesLookup[size]}
		${tone ? loadingIconColorStylesLookup[tone] : 'fill-current'}
		absolute
		left-1/2
		top-1/2
		-translate-x-1/2
		-translate-y-1/2
	`,
  circle: tw.tw`
		animate-loading-spin
		block
	`,
  'circle-path': tw.tw`
		${tone ? loadingCircleColorStylesLookup[tone] : 'stroke-current'}
		animate-loading-dash
	`
});
const loadingCircleColorStylesLookup = {
  accentPrimary: tw.tw`stroke-accent`,
  criticalPrimary: tw.tw`stroke-critical`,
  onPrimary: tw.tw`stroke-onPrimary`,
  'critical-onPrimary': tw.tw`stroke-critical-onPrimary`,
  neutralPrimary: tw.tw`stroke-primary`,
  inverse: tw.tw`stroke-inverse`
};
const loadingIconColorStylesLookup = {
  accentPrimary: tw.tw`fill-accent`,
  criticalPrimary: tw.tw`fill-critical`,
  onPrimary: tw.tw`fill-onPrimary`,
  'critical-onPrimary': tw.tw`fill-critical-onPrimary`,
  neutralPrimary: tw.tw`fill-primary`,
  inverse: tw.tw`fill-inverse`
};
const loadingSizeStylesLookup = {
  '16': tw.tw`h-4 w-4 stroke-2`,
  '20': tw.tw`h-5 w-5 stroke-2`,
  '24': tw.tw`h-6 w-6 stroke-2`,
  '48': tw.tw`h-12 w-12 stroke-1`,
  '80': tw.tw`h-20 w-20 stroke-1`
};
const loadingIconSizeStylesLookup = {
  '48': tw.tw`h-5 w-5`,
  '80': tw.tw`h-8 w-8`
};

function isIconVisible({
  size
}) {
  return size === '48' || size === '80';
}

const iconMap = {
  growYourBrandIcon: {
    icon: growYourBrandIcon.GrowYourBrandIcon
  },
  /* Possibility to not show icon in rare cases */
  none: {
    icon: null
  },
  setmoreIcon: {
    icon: setmoreIcon.SetmoreIcon
  }
};

/**
 * Loading
 *
 * @description
 */

const Loading = /*#__PURE__*/React.forwardRef(function Loading({
  className = '',
  classNames = {},
  size = '24',
  style = {},
  styles = {},
  tone = 'accentPrimary',
  icon = 'setmoreIcon',
  ...consumerProps
}, forwardedRef) {
  const id = React.useId();
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getLoadingStyles({
      size,
      tone
    })
  });
  const Icon = iconMap[icon]['icon'];
  return /*#__PURE__*/jsxRuntime.jsxs(box.Box, {
    ...consumerProps,
    "aria-hidden": "true",
    id: id,
    ref: forwardedRef,
    role: "img",
    ...styleProps('root'),
    children: [Icon && isIconVisible({
      size
    }) && /*#__PURE__*/jsxRuntime.jsx(Icon, {
      ...styleProps('icon')
    }), /*#__PURE__*/jsxRuntime.jsx("svg", {
      fill: "none",
      focusable: "false",
      preserveAspectRatio: "xMidYMid meet",
      viewBox: "0 0 50 50",
      ...styleProps('circle'),
      children: /*#__PURE__*/jsxRuntime.jsx("circle", {
        cx: "25",
        cy: "25",
        r: "20",
        strokeLinecap: "round",
        ...styleProps('circle-path')
      })
    })]
  });
});
Loading.displayName = 'Loading';

exports.Loading = Loading;
