'use client';
import { forwardRef } from 'react';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { t as tw } from './tw-c6a9a210.esm.js';
import { jsx } from 'react/jsx-runtime';
import { Track } from './track-26dc4fe4.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';

const getMenuItemStyles = ({
  size
}) => ({
  root: tw`
		${sizeStylesLookup[size]}
		[transition-timing-function:ease]
		[outline:none]
		active:bg-neutral-pressed
		active:data-[highlighted]:bg-neutral-pressed
		aria-disabled:bg-neutral
		aria-disabled:cursor-default
		aria-disabled:data-[highlighted]:bg-neutral
		aria-disabled:select-none
		aria-disabled:text-disabled
		bg-neutral
		cursor-pointer
		data-[highlighted]:bg-neutral-secondary
		data-[highlighted]:z-10
		duration-300
		gap-2
		hover:bg-neutral-hover
		hover:data-[highlighted]:bg-neutral-hover
		justify-center
		relative
		rounded-8px
		transition-colors
	`
});
const sizeStylesLookup = {
  standard: tw`
		px-2
		py-1.5
		text-body-14
		sm:text-body-12
	`,
  large: tw`
		px-2
		py-2
		text-body-14
	`
};

/**
 * @private
 * MenuItem
 *
 * @description
 * Represents a selectable option in UI elements like DropdownMenu,
 * Combobox, and FilterMenu. Designed for styling, it relies on parent
 * components to provide roles or aria attributes, ensuring flexibility
 * and adaptability in various contexts.
 */
const MenuItem = /*#__PURE__*/forwardRef(function MenuItem({
  as = 'div',
  children,
  className = '',
  classNames = {},
  isDisabled = false,
  isHighlighted = false,
  isSelected = false,
  size = 'standard',
  style = {},
  styles = {},
  ...consumerProps
}, forwardedRef) {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getMenuItemStyles({
      size
    })
  });
  const trackStyleProps = {
    className: styleProps('root').className,
    classNames: {
      center: styleProps('center').className,
      railStart: styleProps('railStart').className,
      railEnd: styleProps('railEnd').className
    },
    style: styleProps('root').style,
    styles: {
      center: styleProps('center').style,
      railStart: styleProps('railStart').style,
      railEnd: styleProps('railEnd').style
    }
  };
  return /*#__PURE__*/jsx(Track, {
    ...consumerProps,
    "aria-disabled": isDisabled || undefined,
    as: as,
    "data-highlighted": isHighlighted || undefined,
    "data-selected": isSelected || undefined,
    ref: forwardedRef,
    ...trackStyleProps,
    children: children
  });
});
MenuItem.displayName = 'MenuItem';

export { MenuItem };
