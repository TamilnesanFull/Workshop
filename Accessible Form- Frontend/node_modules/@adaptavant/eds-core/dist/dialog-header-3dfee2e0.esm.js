import { g as getDialogContentStyles, a as getDialogFooterStyles, b as getDialogHeaderStyles } from './styles-015cb1bf.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import { B as Box } from './box-a5dda214.esm.js';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { I as IconButton } from './icon-button-c905d5af.esm.js';
import { R as RemoveIcon } from './remove-icon-2073e50f.esm.js';

/**
 * Any main content of Dialog should be wrapped with DialogContent
 * - Compound component can accommodate forms, text, images, dropdowns, much more.
 * - Comes with default overflow behaviour, only content inside ModalContent are scrollable
 * - When large content added ensures header and footer are in viewport.
 */
const DialogContent = ({
  children,
  className = '',
  classNames = {},
  style = {},
  styles = {},
  ...consumerProps
}) => {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getDialogContentStyles()
  });
  return /*#__PURE__*/jsx(Box, {
    as: "section",
    ...consumerProps,
    ...styleProps('root'),
    children: children
  });
};
DialogContent.displayName = 'DialogContent';

/**
 * Should be added as last child of a Dialog.
 * - Compound component can accommodate action buttons and other footer elements like checkbox or links.
 * - Will render as default flex container with justify-end and gap of 8px
 */
const DialogFooter = ({
  children,
  className = '',
  classNames = {},
  style = {},
  styles = {},
  ...consumerProps
}) => {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getDialogFooterStyles()
  });
  return /*#__PURE__*/jsx(Box, {
    as: "footer",
    ...consumerProps,
    ...styleProps('root'),
    children: children
  });
};
DialogFooter.displayName = 'DialogFooter';

/**
 * Should be added as first child of a Dialog.
 * - Compound component can accommodate title, subheading, Logo(if any) of Dialog
 * - Will render close button at right end when `closeButtonProps` is passed
 */
const DialogHeader = ({
  children,
  className = '',
  classNames = {},
  closeButtonProps,
  style = {},
  styles = {},
  ...consumerProps
}) => {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getDialogHeaderStyles()
  });
  return /*#__PURE__*/jsxs(Box, {
    as: "header",
    ...consumerProps,
    ...styleProps('root'),
    children: [children, closeButtonProps ? /*#__PURE__*/jsx(IconButton, {
      "aria-label": closeButtonProps.label,
      icon: RemoveIcon,
      onClick: closeButtonProps.onClick,
      size: closeButtonProps.size,
      variant: "neutralTertiary",
      ...styleProps('closeButton')
    }) : null]
  });
};
DialogHeader.displayName = 'DialogHeader';

export { DialogContent as D, DialogFooter as a, DialogHeader as b };
