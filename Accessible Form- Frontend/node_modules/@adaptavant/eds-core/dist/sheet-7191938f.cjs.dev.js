'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var dialog = require('./dialog-dd17b89f.cjs.dev.js');
var dialogHeader = require('./dialog-header-6abacd43.cjs.dev.js');
var utils = require('./utils-414a3959.cjs.dev.js');
var tw = require('./tw-cabb7e4c.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var index = require('./index-3bdbdb42.cjs.dev.js');
var modal = require('./modal-78110d8b.cjs.dev.js');
require('./styles-3403aaec.cjs.dev.js');
require('./box-88b49271.cjs.dev.js');
require('./icon-button-705aec14.cjs.dev.js');
require('./button-4b229f71.cjs.dev.js');
require('./use-button-2241e53a.cjs.dev.js');
require('./styles-8337486f.cjs.dev.js');
require('./styles-554c7d0d.cjs.dev.js');
require('./loading-902bdbe2.cjs.dev.js');
require('./grow-your-brand-icon-6c89c797.cjs.dev.js');
require('./styles-32c512c4.cjs.dev.js');
require('./setmore-icon-45794869.cjs.dev.js');
require('./translations-433e453a.cjs.dev.js');
require('./config-cec3759c.cjs.dev.js');
require('./remove-icon-ad27b88f.cjs.dev.js');
require('./tw-merge-70bc959c.cjs.dev.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');

const getSheetStyles = ({
  placement,
  open
}) => ({
  root: tw.tw`
		${placementStylesLookup({
    placement,
    open
  })}
		${placement}-0
		fixed
	`,
  sheetWrapper: tw.tw`
		${open ? 'animate-fade-in' : 'animate-fade-out'}
	`
});
function placementStylesLookup({
  placement,
  open
}) {
  switch (placement) {
    case 'left':
      return tw.tw`
				${open ? 'animate-sheet-in-left' : 'animate-sheet-out-left'}	
				w-4/5
				rounded-l-none
				h-full
			`;
    case 'right':
      return tw.tw`
				${open ? 'animate-sheet-in-right' : 'animate-sheet-out-right'}
				w-4/5
				rounded-r-none
				h-full
			`;
    case 'top':
      return tw.tw`
				${open ? 'animate-sheet-in-top' : 'animate-sheet-out-top'}
				rounded-t-none
				inset-x-0
				max-h-[80%]
			`;
    default:
    case 'bottom':
      return tw.tw`
				${open ? 'animate-sheet-in-bottom' : 'animate-sheet-out-bottom'}
				rounded-b-none
				inset-x-0
				max-h-[80%]
			`;
  }
}

/**
 * The Sheet component is a container that acts as a supplementary view,
 * providing access to important contextual information. It can be used to
 * display additional content or functionality in mobile views replacing Modal
 * from desktop.
 */
function Sheet({
  children,
  className,
  classNames = {},
  open,
  placement = 'bottom',
  style = {},
  styles = {},
  ...consumerProps
}) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getSheetStyles({
      placement,
      open
    })
  });
  utils.validateChildren(React.Children.toArray(children), [SheetHeader, SheetContent, SheetFooter,
  /**
   * Sheet can appear as a Modal on mobile
   * so we need to allow Modal components
   */
  modal.ModalHeader, modal.ModalContent, modal.ModalFooter]);
  return /*#__PURE__*/jsxRuntime.jsx(dialog.Dialog, {
    ...consumerProps,
    classNames: {
      dialogWrapper: styleProps('sheetWrapper').className
    },
    delay: 500,
    open: open,
    ...styleProps('root'),
    children: children
  });
}
Sheet.displayName = 'Sheet';
const SheetContent = dialogHeader.DialogContent;
SheetContent.displayName = 'SheetContent';
const SheetFooter = dialogHeader.DialogFooter;
SheetFooter.displayName = 'SheetFooter';
function SheetHeader({
  children,
  closeButtonProps,
  ...consumerProps
}) {
  const dialogCloseButtonProps = closeButtonProps ? {
    ...closeButtonProps,
    size: 'large'
  } : undefined;
  return /*#__PURE__*/jsxRuntime.jsx(dialogHeader.DialogHeader, {
    ...consumerProps,
    closeButtonProps: dialogCloseButtonProps,
    children: children
  });
}
SheetHeader.displayName = 'SheetHeader';

exports.Sheet = Sheet;
exports.SheetContent = SheetContent;
exports.SheetFooter = SheetFooter;
exports.SheetHeader = SheetHeader;
