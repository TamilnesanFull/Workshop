'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var context = require('./context-1e651be3.cjs.dev.js');
var use_dropdown_context_values = require('./use-dropdown-context-values-3b999c7b.cjs.dev.js');
var use_populate_descendant_nodes = require('./use-populate-descendant-nodes-de07faf0.cjs.dev.js');
var context$1 = require('./context-1d59120d.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');

function Combobox({
  children,
  inputValue,
  menuTrigger = 'input',
  onClear,
  onInputChange,
  onSelectionChange,
  popoverMatchReferenceWidth = false,
  popoverMaxHeight = 356,
  popoverMaxWidth = 400,
  popoverOffset = 4,
  popoverPlacement = 'bottom-start',
  selectedKey,
  selectedOption,
  strategy = 'absolute'
}) {
  const dropdownContext = use_dropdown_context_values.useDropdownContextValues({
    popoverMatchReferenceWidth,
    popoverMaxHeight,
    popoverMaxWidth,
    popoverOffset,
    popoverPlacement,
    strategy
  });
  const {
    dispatch,
    isMenuOpen,
    popover
  } = dropdownContext;
  const descendantNodeSelector = '[role="option"]';
  use_populate_descendant_nodes.usePopulateDescendantNodes({
    isMenuOpen,
    children,
    dispatch,
    popoverRef: popover.popoverRef,
    selectors: descendantNodeSelector
  });
  return /*#__PURE__*/jsxRuntime.jsx(context.DropdownProvider, {
    value: dropdownContext,
    children: /*#__PURE__*/jsxRuntime.jsx(context$1.ComboboxProvider, {
      value: {
        inputValue,
        menuTrigger,
        onClear,
        onInputChange,
        onSelectionChange,
        selectedKey,
        selectedOption
      },
      children: typeof children === 'function' ? children({
        isMenuOpen
      }) : children
    })
  });
}
Combobox.displayName = 'Combobox';

exports.Combobox = Combobox;
