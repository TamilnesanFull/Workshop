'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var index = require('./index-3bdbdb42.cjs.dev.js');
var tw = require('./tw-cabb7e4c.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var box = require('./box-88b49271.cjs.dev.js');
require('./tw-merge-70bc959c.cjs.dev.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');

/**
 * Track
 *
 * @description A layout component which allows you to layout elements with
 * 2 optional fixed "rails" and a fluid center (think railway track).
 */
const Track = /*#__PURE__*/React.forwardRef(function Track({
  as: RootEl = 'div',
  children,
  className = '',
  classNames = {},
  railEnd,
  railStart,
  style = {},
  styles = {},
  verticalAlign = 'middle',
  ...consumerProps
}, forwardedRef) {
  const ChildEl = ['label', 'p', 'span'].includes(RootEl) ? 'span' : 'div';
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: {
      center: tw.tw`
				flex-col
				grow
				min-w-0
			`,
      railEnd: tw.tw`
				inline-flex
				shrink-0
			`,
      railStart: tw.tw`
				inline-flex
				shrink-0
			`,
      root: tw.tw`
				${verticalAlignMap[verticalAlign]}
				flex
			`
    }
  });
  return /*#__PURE__*/jsxRuntime.jsxs(box.Box, {
    ...consumerProps,
    as: RootEl,
    ref: forwardedRef,
    ...styleProps('root'),
    children: [railStart ? /*#__PURE__*/jsxRuntime.jsx(box.Box, {
      as: ChildEl,
      ...styleProps('railStart', styles.rail),
      children: railStart
    }) : null, /*#__PURE__*/jsxRuntime.jsx(box.Box, {
      as: ChildEl,
      ...styleProps('center'),
      children: children
    }), railEnd ? /*#__PURE__*/jsxRuntime.jsx(box.Box, {
      as: ChildEl,
      ...styleProps('railEnd', styles.rail),
      children: railEnd
    }) : null]
  });
});
Track.displayName = 'Track';
const verticalAlignMap = {
  bottom: tw.tw`items-end`,
  middle: tw.tw`items-center`,
  top: tw.tw`items-start`
};

exports.Track = Track;
