'use client';
import { forwardRef } from 'react';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { t as tw } from './tw-c6a9a210.esm.js';
import { jsxs, jsx } from 'react/jsx-runtime';
import { B as Box } from './box-a5dda214.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';

/**
 * Track
 *
 * @description A layout component which allows you to layout elements with
 * 2 optional fixed "rails" and a fluid center (think railway track).
 */
const Track = /*#__PURE__*/forwardRef(function Track({
  as: RootEl = 'div',
  children,
  className = '',
  classNames = {},
  railEnd,
  railStart,
  style = {},
  styles = {},
  verticalAlign = 'middle',
  ...consumerProps
}, forwardedRef) {
  const ChildEl = ['label', 'p', 'span'].includes(RootEl) ? 'span' : 'div';
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: {
      center: tw`
				flex-col
				grow
				min-w-0
			`,
      railEnd: tw`
				inline-flex
				shrink-0
			`,
      railStart: tw`
				inline-flex
				shrink-0
			`,
      root: tw`
				${verticalAlignMap[verticalAlign]}
				flex
			`
    }
  });
  return /*#__PURE__*/jsxs(Box, {
    ...consumerProps,
    as: RootEl,
    ref: forwardedRef,
    ...styleProps('root'),
    children: [railStart ? /*#__PURE__*/jsx(Box, {
      as: ChildEl,
      ...styleProps('railStart', styles.rail),
      children: railStart
    }) : null, /*#__PURE__*/jsx(Box, {
      as: ChildEl,
      ...styleProps('center'),
      children: children
    }), railEnd ? /*#__PURE__*/jsx(Box, {
      as: ChildEl,
      ...styleProps('railEnd', styles.rail),
      children: railEnd
    }) : null]
  });
});
Track.displayName = 'Track';
const verticalAlignMap = {
  bottom: tw`items-end`,
  middle: tw`items-center`,
  top: tw`items-start`
};

export { Track };
