'use strict';

var tailwindMerge = require('tailwind-merge');
var tokens_dist_adaptavantEdsCoreTokens = require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');

const radiusKeys = Object.keys(tokens_dist_adaptavantEdsCoreTokens.global.radius);

/**
 * Custom Tailwind Merge utility that supports our custom plugins.
 * @see https://github.com/dcastil/tailwind-merge/blob/main/docs/configuration.md#extending-the-tailwind-merge-config
 */
const twMerge = tailwindMerge.extendTailwindMerge({
  extend: {
    classGroups: {
      rounded: [{
        rounded: radiusKeys
      }],
      'rounded-s': [{
        'rounded-s': radiusKeys
      }],
      'rounded-e': [{
        'rounded-e': radiusKeys
      }],
      'rounded-t': [{
        'rounded-t': radiusKeys
      }],
      'rounded-r': [{
        'rounded-r': radiusKeys
      }],
      'rounded-b': [{
        'rounded-b': radiusKeys
      }],
      'rounded-l': [{
        'rounded-l': radiusKeys
      }],
      'rounded-ss': [{
        'rounded-ss': radiusKeys
      }],
      'rounded-se': [{
        'rounded-se': radiusKeys
      }],
      'rounded-ee': [{
        'rounded-ee': radiusKeys
      }],
      'rounded-es': [{
        'rounded-es': radiusKeys
      }],
      'rounded-tl': [{
        'rounded-tl': radiusKeys
      }],
      'rounded-tr': [{
        'rounded-tr': radiusKeys
      }],
      'rounded-br': [{
        'rounded-br': radiusKeys
      }],
      'rounded-bl': [{
        'rounded-bl': radiusKeys
      }],
      'font-size': [{
        'text-body': [tailwindMerge.validators.isNumber],
        'text-heading': [tailwindMerge.validators.isNumber]
      }]
    }
  }
});

exports.twMerge = twMerge;
