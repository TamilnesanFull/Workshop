'use strict';

var React = require('react');
var index = require('./index-7955fb8e.cjs.prod.js');
var tw = require('./tw-9929267e.cjs.prod.js');
var styles = require('./styles-3786e407.cjs.prod.js');
var jsxRuntime = require('react/jsx-runtime');
var text = require('./text-a5ab226e.cjs.prod.js');

const getLabelStyles = ({
  labelVisibility,
  size
}) => ({
  root: tw.tw`
		${labelVisibility === 'hidden' ? 'sr-only' : ''}
		${styles.typography[size]}
		flex
		gap-1
	`,
  secondaryLabel: tw.tw`
		${styles.typography[size]}
		break-normal
		text-secondary
	`
});

/**
 * Label
 *
 * @description
 * Used to label a form field.
 */

const Label = /*#__PURE__*/React.forwardRef(function Label({
  as = 'label',
  children,
  className = '',
  classNames = {},
  labelVisibility = 'visible',
  secondaryLabel,
  size = 'standard',
  style = {},
  styles = {},
  ...consumerProps
}, forwardedRef) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getLabelStyles({
      labelVisibility,
      size
    })
  });
  return /*#__PURE__*/jsxRuntime.jsxs(text.Text, {
    ...consumerProps,
    as: as,
    ref: forwardedRef,
    ...styleProps('root'),
    children: [children, secondaryLabel ? /*#__PURE__*/jsxRuntime.jsx(text.Text, {
      ...styleProps('secondaryLabel'),
      children: secondaryLabel
    }) : null]
  });
});
Label.displayName = 'Label';

exports.Label = Label;
