'use client';
import { forwardRef, useState } from 'react';
import { B as BrokenImageIcon } from './broken-image-icon-4b9c59a8.esm.js';
import { g as getStyleProps } from './index-dd10a77e.esm.js';
import { AvatarContextProvider, useAvatarContext } from './context-04c2e854.esm.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import { t as tw } from './tw-c6a9a210.esm.js';
import { B as Box } from './box-a5dda214.esm.js';
import { I as Image } from './image-d8931747.esm.js';
import { T as Text } from './text-3fc88ad6.esm.js';
import './styles-53001919.esm.js';
import './tw-merge-91a8b6ee.esm.js';
import 'tailwind-merge';
import '../tokens/dist/adaptavant-eds-core-tokens.esm.js';

// ------------------------------ Avatar ---------------------------------------

const getAvatarStyles = ({
  isGuest,
  size,
  status
}) => ({
  root: tw`
		${avatarSizeMap[size]}
		bg-avatar
		inline-flex
		items-center
		justify-center
		relative
		rounded-full
		text-primary
	`,
  image: tw``,
  statusBadge: tw`
		${statusBadgeSizeMap[size]}
		${status ? statusBadgeColorMap[status] : ''}
		${isGuest ? tw`rounded-6px` : tw`rounded-full`}
		absolute
		border-status-border
		border-2
	`,
  icon: tw`
		fill-status-icon
		rounded-full
	`,
  initial: tw`
		${initialSizeMap[size]}
		h-full
		inline-flex
		items-center
		justify-center
		uppercase
		w-full
	`
});
const initialSizeMap = {
  '16': tw`text-body-8`,
  '20': tw`text-body-10`,
  '24': tw`text-body-10`,
  '32': tw`text-body-12`,
  '40': tw`text-body-14`,
  '48': tw`text-body-14`,
  '64': tw`text-body-20`,
  '96': tw`text-heading-28 font-stronger`
};
const statusBadgeSizeMap = {
  '16': tw`
		bottom-0
		end-0
		h-1.5
		w-1.5
	`,
  '20': tw`
		bottom-0
		end-0
		h-1.5
		w-1.5
	`,
  '24': tw`
		bottom-0
		end-0
		h-2
		w-2
	`,
  '32': tw`
		-bottom-0.5
		-end-0.5
		h-3
		w-3
	`,
  '40': tw`
		-bottom-0.5
		-end-0.5
		h-4
		w-4
	`,
  '48': tw`
		-bottom-0.5
		-end-0.5
		h-4
		w-4
	`,
  '64': tw`
		-bottom-0.5
		-end-0.5
		h-6
		w-6
	`,
  '96': tw`
		-bottom-0.5
		-end-0.5
		h-8
		w-8
	`
};
const statusBadgeColorMap = {
  available: tw`fill-status-available`,
  away: tw`fill-status-away`,
  busy: tw`fill-status-busy`,
  offline: tw`fill-status-offline`,
  onCall: tw`fill-decoration-brand`,
  audioCall: tw`fill-decoration-brand`,
  customer: tw`fill-decoration-brand`
};
const avatarSizeMap = {
  '16': tw`
		h-4
		w-4
	`,
  '20': tw`
		h-5
		w-5
	`,
  '24': tw`
		h-6
		w-6
	`,
  '32': tw`
		h-8
		w-8
	`,
  '40': tw`
		h-10
		w-10
	`,
  '48': tw`
		h-12
		w-12
	`,
  '64': tw`
		h-16
		w-16
	`,
  '96': tw`
		h-24
		w-24
	`
};

// ---------------------------- AvatarImage ------------------------------------

const getAvatarImageStyles = ({
  size
}) => ({
  root: tw`
		bg-neutral-disabled
		h-full
		object-cover
		rounded-full
		w-full
	`,
  brokenImage: tw`
		${avatarIconSizeMap[size]}
	`
});

// ---------------------------- AvatarIcon -------------------------------------

const getAvatarIconStyles = ({
  size
}) => ({
  root: tw`
		${avatarIconSizeMap[size]}
	`
});
const avatarIconSizeMap = {
  '16': tw`
		h-2.5
		w-2.5
	`,
  '20': tw`
		h-3
		w-3
	`,
  '24': tw`
		h-4
		w-4
	`,
  '32': tw`
		h-5
		w-5
	`,
  '40': tw`
		h-6
		w-6
	`,
  '48': tw`
		h-6
		w-6
	`,
  '64': tw`
		h-8
		w-8
	`,
  '96': tw`
		h-12
		w-12
	`
};

function AvailableIcon(props) {
  return /*#__PURE__*/jsx("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: /*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: 24,
      width: 24
    })
  });
}
function AwayIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: 24,
      width: 24
    }), /*#__PURE__*/jsx("path", {
      d: "M7 15.6A6 6 0 0011.8 6 6 6 0 117 15.6z",
      fill: "#fff"
    })]
  });
}
function BusyIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: 24,
      width: 24
    }), /*#__PURE__*/jsx("path", {
      d: "M6 12a2 2 0 012-2h8a2 2 0 110 4H8a2 2 0 01-2-2z",
      fill: "#fff"
    })]
  });
}
function OfflineIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: 24,
      width: 24
    }), /*#__PURE__*/jsx("path", {
      d: "M17 12a5 5 0 11-10 0 5 5 0 0110 0z",
      fill: "#fff"
    })]
  });
}
function OnCallIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: "24",
      width: "24"
    }), /*#__PURE__*/jsx("path", {
      "clip-rule": "evenodd",
      d: "M7.15062 6C5.41058 6 4 7.51834 4 9.3913V14.6087C4 16.4816 5.41058 18 7.15062 18H12.846C14.4418 18 15.7605 16.7229 15.9682 15.0664L17.6598 16.1884C18.1334 16.5024 18.7276 16.5162 19.2132 16.2245C19.6989 15.9327 20 15.381 20 14.7822V9.21619C20 8.61739 19.6989 8.06563 19.2132 7.77388C18.7276 7.48217 18.1334 7.49598 17.6598 7.81L15.9679 8.93206C15.7597 7.2763 14.4413 6 12.846 6H7.15062Z",
      fill: "#ffffff",
      "fill-rule": "evenodd"
    })]
  });
}
function AudioCallIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: "24",
      width: "24"
    }), /*#__PURE__*/jsx("path", {
      d: "M9.05351 4.7199C8.09389 3.76003 6.54023 3.76003 5.58061 4.7199L5.00941 5.29581C4.60714 5.70382 4.31098 6.20423 4.14688 6.75326C3.98277 7.30228 3.95571 7.88317 4.06807 8.44508C4.53417 10.9087 5.95075 13.5552 8.19899 15.804C10.4472 18.0528 13.093 19.4698 15.5561 19.936C16.6985 20.1508 17.882 19.8217 18.7045 18.9944L19.2803 18.4185C20.2399 17.4586 20.2399 15.9092 19.2803 14.9493L18.243 13.9209C17.866 13.5441 17.3548 13.3324 16.8218 13.3324C16.2889 13.3324 15.7777 13.5441 15.4007 13.9209L14.6056 14.707C13.4363 14.1778 12.3739 13.4389 11.4708 12.5268C10.559 11.6252 9.82015 10.564 9.29113 9.3958L10.0086 8.67819C10.8448 7.84174 10.8951 6.56649 10.0862 5.75746L9.04894 4.7199H9.05351Z",
      fill: "#ffffff"
    })]
  });
}
function CustomerIcon(props) {
  return /*#__PURE__*/jsxs("svg", {
    focusable: "false",
    height: "24",
    preserveAspectRatio: "xMidYMid meet",
    role: "img",
    viewBox: "0 0 24 24",
    width: "24",
    xmlns: "http://www.w3.org/2000/svg",
    ...props,
    children: [/*#__PURE__*/jsx("rect", {
      fill: "inherit",
      height: "24",
      width: "24"
    }), /*#__PURE__*/jsx("path", {
      clipRule: "evenodd",
      d: "M3 12C3 7.03631 7.03631 3 12 3C16.9628 3 21 7.03722 21 12C21 16.9627 16.9637 21 12 21C7.03631 21 3 16.9637 3 12ZM13.9818 9.95753C13.9792 9.37581 14.4512 8.90909 15.0264 8.90909C15.6025 8.90909 16.0727 9.37509 16.0727 9.95455C16.0727 10.5319 15.6046 11 15.0273 11C14.451 11 13.9834 10.5335 13.9818 9.95753ZM7.89886 9.95751C7.89626 9.37579 8.36821 8.90909 8.9434 8.90909C9.5195 8.90909 9.98976 9.3751 9.98976 9.95455C9.98976 10.5319 9.52163 11 8.94431 11C8.36797 11 7.90046 10.5335 7.89886 9.95751ZM9.39182 14.7704C9.072 14.4547 8.5568 14.4559 8.23855 14.7742C7.91903 15.0937 7.91903 15.6118 8.23855 15.9313L8.23955 15.9323L8.24066 15.9334L8.24324 15.9359C8.2451 15.9378 8.24728 15.9399 8.24976 15.9423C8.25472 15.9471 8.26089 15.9531 8.26828 15.9601C8.28305 15.9741 8.30268 15.9923 8.32706 16.0141C8.37581 16.0576 8.44381 16.1158 8.53032 16.1834C8.70299 16.3186 8.95168 16.4936 9.27039 16.6674C9.90755 17.0149 10.8371 17.3636 11.9989 17.3636C13.1603 17.3636 14.0898 17.0148 14.727 16.6674C15.0458 16.4937 15.2945 16.3186 15.4672 16.1836C15.5537 16.1159 15.6218 16.0578 15.6705 16.0143C15.6949 15.9925 15.7145 15.9743 15.7293 15.9603C15.7367 15.9533 15.7429 15.9473 15.7478 15.9425L15.7513 15.9392L15.7544 15.9361L15.7569 15.9336L15.758 15.9325C15.758 15.9325 15.7569 15.9336 15.759 15.9315C16.0787 15.6121 16.0789 15.094 15.7595 14.7744C15.4414 14.456 14.9261 14.4546 14.6062 14.7702L14.6044 14.772C14.6007 14.7754 14.5927 14.7829 14.5806 14.7937C14.5563 14.8154 14.5155 14.8505 14.4591 14.8946C14.3459 14.9832 14.1719 15.1063 13.9437 15.2307C13.4871 15.4797 12.8257 15.7273 11.9989 15.7273C11.1716 15.7273 10.5103 15.4797 10.0538 15.2308C9.82568 15.1064 9.65188 14.9833 9.53874 14.8947C9.48236 14.8506 9.44164 14.8156 9.41739 14.7939C9.40528 14.7831 9.39733 14.7756 9.39366 14.7722L9.39182 14.7704Z",
      fill: "#ffffff",
      fillRule: "evenodd"
    })]
  });
}

// ------------------------------ Avatar ---------------------------------------

/**
 * Avatar
 *
 * @description Visual representation of a user.
 */

const Avatar = /*#__PURE__*/forwardRef(function Avatar({
  children,
  className = '',
  classNames = {},
  imageSrc,
  name,
  size,
  status,
  style = {},
  styles = {},
  isGuest = false,
  ...consumerProps
}, forwardedRef) {
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getAvatarStyles({
      isGuest,
      size,
      status
    })
  });
  const ariaLabel = getAriaLabel({
    name,
    status
  });
  function AvatarChildren() {
    if (imageSrc) {
      return /*#__PURE__*/jsx(AvatarImage, {
        src: imageSrc,
        ...styleProps('image')
      });
    }
    return children ?? /*#__PURE__*/jsx(Text, {
      "aria-hidden": true,
      ...styleProps('initial'),
      children: name.charAt(0)
    });
  }
  return /*#__PURE__*/jsx(AvatarContextProvider, {
    value: {
      size,
      styleProps
    },
    children: /*#__PURE__*/jsxs(Box, {
      as: "span",
      ...consumerProps,
      "aria-label": ariaLabel,
      ref: forwardedRef,
      role: "text",
      ...styleProps('root'),
      children: [/*#__PURE__*/jsx(AvatarChildren, {}), /*#__PURE__*/jsx(AvatarStatusBadge, {
        status: status
      })]
    })
  });
});
Avatar.displayName = 'Avatar';

// ------------------------- AvatarStatusBadge ---------------------------------

function AvatarStatusBadge({
  status
}) {
  const {
    styleProps
  } = useAvatarContext();
  if (!status) {
    return null;
  }
  const Icon = statusMap[status]['icon'];
  return /*#__PURE__*/jsx(Icon, {
    "aria-hidden": true,
    ...styleProps('statusBadge')
  });
}

// ---------------------------- AvatarImage ------------------------------------

function AvatarImage({
  className = '',
  classNames = {},
  src,
  style = {},
  styles = {},
  ...consumerProps
}) {
  const {
    size
  } = useAvatarContext();
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getAvatarImageStyles({
      size
    })
  });
  const [hasImageError, setHasImageError] = useState(false);
  if (hasImageError) {
    return /*#__PURE__*/jsx(BrokenImageIcon, {
      ...styleProps('brokenImage')
    });
  }
  return /*#__PURE__*/jsx(Image, {
    ...consumerProps,
    alt: "",
    height: size,
    src: src,
    width: size,
    ...styleProps('root'),
    onError: () => setHasImageError(true)
  });
}

// ---------------------------- AvatarIcon -------------------------------------

function AvatarIcon({
  className = '',
  classNames = {},
  icon: Icon,
  style = {},
  styles = {},
  ...consumerProps
}) {
  const {
    size
  } = useAvatarContext();
  const styleProps = getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getAvatarIconStyles({
      size
    })
  });
  return /*#__PURE__*/jsx(Icon, {
    ...consumerProps,
    ...styleProps('root')
  });
}
AvatarIcon.displayName = 'AvatarIcon';

// -------------------------------- Utils --------------------------------------

function getAriaLabel({
  name,
  status
}) {
  return [name, status && statusMap[status]['label']].filter(Boolean).join('. ');
}
const statusMap = {
  onCall: {
    icon: OnCallIcon,
    label: 'on a call'
  },
  busy: {
    icon: BusyIcon,
    label: 'busy'
  },
  offline: {
    icon: OfflineIcon,
    label: 'offline'
  },
  available: {
    icon: AvailableIcon,
    label: 'available'
  },
  away: {
    icon: AwayIcon,
    label: 'away'
  },
  audioCall: {
    icon: AudioCallIcon,
    label: 'audio call'
  },
  customer: {
    icon: CustomerIcon,
    label: 'customer'
  }
};

export { Avatar, AvatarIcon, AvatarImage };
