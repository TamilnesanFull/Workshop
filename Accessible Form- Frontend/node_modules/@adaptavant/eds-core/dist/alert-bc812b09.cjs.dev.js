'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('./index-3bdbdb42.cjs.dev.js');
var tw = require('./tw-cabb7e4c.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var warningIcon = require('./warning-icon-8cb4679e.cjs.dev.js');
var errorIcon = require('./error-icon-e17bfc88.cjs.dev.js');
var informationIcon = require('./information-icon-5527053a.cjs.dev.js');
var checkIcon = require('./check-icon-e4316b72.cjs.dev.js');
var track = require('./track-1da464e0.cjs.dev.js');
var align_child_to_text = require('./align-child-to-text-b4992541.cjs.dev.js');
require('./tw-merge-70bc959c.cjs.dev.js');
require('tailwind-merge');
require('../tokens/dist/adaptavant-eds-core-tokens.cjs.dev.js');
require('react');
require('./styles-32c512c4.cjs.dev.js');

const getAlertStyles = ({
  variant
}) => ({
  root: tw.tw`
		${alertVariantStylesLookup[variant]}
		gap-2
		px-3
		py-2
		rounded-8px
		text-body-12
	`,
  icon: tw.tw`
		${alertVariantFillStylesLookup[variant]}
	`
});
const alertVariantStylesLookup = {
  caution: tw.tw`
		bg-caution-secondary 
		text-caution-secondary
	`,
  critical: tw.tw`
		bg-critical-secondary 
		text-critical-secondary
	`,
  info: tw.tw`
		bg-canvas-secondary 
		text-primary
	`,
  positive: tw.tw`
		bg-positive-secondary 
		text-positive-secondary
	`
};
const alertVariantFillStylesLookup = {
  caution: tw.tw`
		fill-caution
	`,
  critical: tw.tw`
		fill-critical
	`,
  info: tw.tw`
		fill-primary
	`,
  positive: tw.tw`
		fill-positive
	`
};

/**
 * Alert component displays important information to the user.
 *
 * @description It captures the user's attention without disrupting their task.
 */

function Alert({
  children,
  className = '',
  classNames = {},
  style = {},
  styles = {},
  variant = 'info',
  ...consumerProps
}) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getAlertStyles({
      variant
    })
  });
  const Icon = variantToIconMap[variant];
  return /*#__PURE__*/jsxRuntime.jsx(track.Track, {
    ...consumerProps,
    ...styleProps('root'),
    children: children,
    railEnd: undefined,
    railStart: /*#__PURE__*/jsxRuntime.jsx(align_child_to_text.AlignChildToText, {
      children: /*#__PURE__*/jsxRuntime.jsx(Icon, {
        ...styleProps('icon'),
        size: "16"
      })
    }),
    role: "alert",
    verticalAlign: "top"
  });
}
const variantToIconMap = {
  caution: warningIcon.WarningIcon,
  critical: errorIcon.ErrorIcon,
  info: informationIcon.InformationIcon,
  positive: checkIcon.CheckIcon
};

exports.Alert = Alert;
