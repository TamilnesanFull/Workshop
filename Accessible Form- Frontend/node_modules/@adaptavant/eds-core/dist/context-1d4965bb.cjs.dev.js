'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var composeId = require('./compose-id-8f0cde18.cjs.dev.js');
var use_provided_or_generated_id = require('./use-provided-or-generated-id-2bfa8150.cjs.dev.js');

const TabsContext = /*#__PURE__*/React.createContext(undefined);
const TabsContextProvider = TabsContext.Provider;
function useTabsContext(value, disabled) {
  const context = React.useContext(TabsContext);
  const {
    tabItemId,
    tabContentId
  } = useGenerateA11yIds(value);
  if (!context) {
    throw new Error('useTabsContext must be used within a TabsContextProvider');
  }
  return {
    ...context,
    tabItemA11yProps: {
      id: tabItemId,
      role: 'tab',
      'aria-controls': tabContentId,
      'aria-selected': value === context.selectedValue ? true : false,
      'aria-disabled': disabled === true ? true : undefined,
      disabled: disabled === true ? true : undefined
    },
    tabContentA11yProps: {
      id: tabContentId,
      role: 'tabpanel',
      'aria-labelledby': tabItemId,
      tabIndex: value === context.selectedValue ? 0 : -1,
      'aria-hidden': value === context.selectedValue ? undefined : true
    },
    tabListA11yProps: {
      role: 'tablist',
      'aria-orientation': 'horizontal'
    }
  };
}

// Generates unique ids for tab items and tab contents using value provided
function useGenerateA11yIds(value) {
  const id = use_provided_or_generated_id.useProvidedOrGeneratedId(value);
  return {
    tabItemId: composeId.composeId('tab-item', id),
    tabContentId: composeId.composeId('tab-content', id)
  };
}

exports.TabsContextProvider = TabsContextProvider;
exports.useTabsContext = useTabsContext;
