'use strict';

var errorIcon = require('./error-icon-e17bfc88.cjs.dev.js');
var index = require('./index-3bdbdb42.cjs.dev.js');
var tw = require('./tw-cabb7e4c.cjs.dev.js');
var styles = require('./styles-3e350289.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');
var text = require('./text-b4d8b4ef.cjs.dev.js');
var track = require('./track-1da464e0.cjs.dev.js');
var align_child_to_text = require('./align-child-to-text-b4992541.cjs.dev.js');

const getFieldErrorMessageStyles = ({
  isDisabled,
  size
}) => ({
  root: tw.tw`
		${styles.typography[size]}
		gap-1
	`,
  errorIcon: tw.tw`
		${isDisabled ? 'text-disabled' : 'text-critical'}
	`,
  errorMessage: tw.tw`
		${styles.typography[size]}
		${isDisabled ? 'text-disabled' : 'text-critical'}
	`
});

/**
 * ErrorMessage
 *
 * @description
 * A component that displays an error message.
 */

function FieldErrorMessage({
  children,
  className = '',
  classNames = {},
  id,
  isDisabled = false,
  size = 'standard',
  style = {},
  styles = {},
  shouldAnnounceOnMount = true,
  ...consumerProps
}) {
  const styleProps = index.getStyleProps({
    className,
    classNames,
    style,
    styles,
    tw: getFieldErrorMessageStyles({
      isDisabled,
      size
    })
  });
  return /*#__PURE__*/jsxRuntime.jsx(track.Track, {
    ...consumerProps,
    railStart: /*#__PURE__*/jsxRuntime.jsx(align_child_to_text.AlignChildToText, {
      children: /*#__PURE__*/jsxRuntime.jsx(errorIcon.ErrorIcon, {
        size: "16",
        ...styleProps('errorIcon')
      })
    }),
    role: shouldAnnounceOnMount ? 'alert' : undefined,
    verticalAlign: "top",
    ...styleProps('root'),
    children: /*#__PURE__*/jsxRuntime.jsx(text.Text, {
      id: id,
      ...styleProps('errorMessage'),
      children: children
    })
  });
}
FieldErrorMessage.displayName = 'FieldErrorMessage';

exports.FieldErrorMessage = FieldErrorMessage;
