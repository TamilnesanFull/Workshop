'use client';
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var context = require('./context-1e651be3.cjs.dev.js');
var use_dropdown_context_values = require('./use-dropdown-context-values-3b999c7b.cjs.dev.js');
var use_populate_descendant_nodes = require('./use-populate-descendant-nodes-de07faf0.cjs.dev.js');
var filter_menu_trigger = require('./filter-menu-trigger-6771e273.cjs.dev.js');
var jsxRuntime = require('react/jsx-runtime');

function FilterMenu({
  children,
  popoverMatchReferenceWidth = false,
  popoverMaxHeight = 356,
  popoverMaxWidth = 400,
  popoverOffset = 4,
  popoverPlacement = 'bottom-start',
  strategy = 'absolute'
}) {
  const dropdownContext = use_dropdown_context_values.useDropdownContextValues({
    popoverMatchReferenceWidth,
    popoverMaxHeight,
    popoverMaxWidth,
    popoverOffset,
    popoverPlacement,
    strategy
  });
  const {
    isMenuOpen,
    dispatch,
    popover
  } = dropdownContext;
  const {
    triggerProps
  } = filter_menu_trigger.useFilterMenuTriggerProps(dropdownContext);
  const descendantNodeSelector = '[role="option"]';
  use_populate_descendant_nodes.usePopulateDescendantNodes({
    isMenuOpen,
    children,
    dispatch,
    popoverRef: popover.popoverRef,
    selectors: descendantNodeSelector
  });
  return /*#__PURE__*/jsxRuntime.jsx(context.DropdownProvider, {
    value: dropdownContext,
    children: typeof children === 'function' ? children({
      isMenuOpen,
      triggerProps
    }) : children
  });
}
FilterMenu.displayName = 'FilterMenu';

exports.FilterMenu = FilterMenu;
